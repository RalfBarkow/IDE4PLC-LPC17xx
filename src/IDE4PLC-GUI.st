"Copyright © 2012-2014 Eric Nicolás Pernia.This file is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>."Object subclass: #PLC_Proyect_Editor_OLD	instanceVariableNames: 'keyboardFocusNetwork selectedVariableIndex'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_Proyect_Editor_OLD commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_Proyect_Editor_OLD is xxxxxxxxx.Instance Variables	keyboardFocusNetwork:		<Object>	selectedVariableIndex:		<Object>keyboardFocusNetwork	- xxxxxselectedVariableIndex	- xxxxx!!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!globalVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!globalVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self globalVarsMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!globalVarsMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@30.	globalVarsMorph backgroundColor: Color black twiceLighter.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: 1.	globalVarsMorph text: 'Globales'. "Declaraciones de variables globales"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!locatedMorph	"devuelve un PLC_TitleMorph"	| addressMorph |	addressMorph := PLC_TitleMorph new.	addressMorph extent: 90@25.	addressMorph backgroundColor: Color black twiceLighter lighter.	addressMorph backgroundBorderWidth: 1.	addressMorph emphasis: 1.	addressMorph text: 'Ubicación'.	addressMorph changed.		^ addressMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!locatedVarLists	"Genera la fila"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varAddress			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Ubicación de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!locatedVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self locatedVarsMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!locatedVarTitles	"Genera la fila"	| row |	row := self builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self locatedMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!locatedVarsMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@30.	globalVarsMorph backgroundColor: Color black twiceLighter.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: 1.	globalVarsMorph text: 'Ubicadas'. "Declaraciones de variables ubicadas 	Variables representadas directamente"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/19/2013 16:37'!varAddress		| col |	col := OrderedCollection new.		col add: '%I0.0'.	col add: ''.	col add: ''.	col add: ''.		^ col.! !!PLC_Proyect_Editor_OLD methodsFor: 'il editor' stamp: 'EricPernia 11/19/2013 16:37'!ilPouBodyEditor	"Devuelve la columna con el editor de lenguaje IL"		"HACER"! !!PLC_Proyect_Editor_OLD methodsFor: 'open/close' stamp: 'EricPernia 11/19/2013 16:37'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_Proyect_Editor_OLD methodsFor: 'open/close' stamp: 'EricPernia 11/19/2013 16:37'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ self proyectFilesPath , 'imagenes/'."	^ ''.! !!PLC_Proyect_Editor_OLD methodsFor: 'open/close' stamp: 'EricPernia 11/19/2013 16:37'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window windowExtent aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Unidad de Organización de Programa (POU)' ) model: nil.		"Agrego el editor de variables"	window addMorph: self pouVarDeclEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	window addMorph: self ladderPouBodyEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_Proyect_Editor_OLD methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_Proyect_Editor_OLD methodsFor: 'fbd editor' stamp: 'EricPernia 11/19/2013 16:37'!fbdPouBodyEditor	"Devuelve la columna con el editor de lenguaje FBD"		"HACER"! !!PLC_Proyect_Editor_OLD methodsFor: 'ladder editor' stamp: 'EricPernia 11/19/2013 16:37'!ladderPouBodyEditor	"Devuelve la columna con el editor de lenguaje Ladder"		| ladderPouBodyEditor controller ladderView scroller expander |	controller := PLC_LadderController newWithModel: nil.		ladderView := controller openLadderView.	self keyboardFocusNetwork: ladderView.			scroller := ( self builder newScrollPaneFor: ladderView ) 		hResizing: #spaceFill; 		vResizing: #spaceFill.	expander := ( self builder newExpander: 'Segmento 1'  for: scroller ) 		spaceFillWeight: 1; 		expanded: true.	ladderPouBodyEditor := self builder newColumn: {   		self ladderPouBodyMorph.		self ladderToolbar.		expander.	}.	"hResizing: #spaceFill;	vResizing: #shrinkWrap;	cellSpacing: 10"			ladderPouBodyEditor 		cellInset: 0";		extent: 720 @ 450".							^ ladderPouBodyEditor.					! !!PLC_Proyect_Editor_OLD methodsFor: 'ladder editor' stamp: 'EricPernia 11/19/2013 16:37'!ladderPouBodyMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: PLC_GraphicElementProperties uniqueInstance programHeaderColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: 'Cuerpo de POU en lenguaje Ladder'.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'ladder editor' stamp: 'EricPernia 11/19/2013 16:37'!ladderToolbar 	"Devuelve la barra de herramientas superior de la ventana de edición de Ladder"		| builder |		"^PLC_LadderToolBarMorph new."	builder := UITheme builder.		^ builder newToolbar: {		"		builder			newButtonFor: self keyboardFocusNetwork ""if we had a model it would go here""			getState: nil			action: #drawGroups			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addNetwork.png')			help: 'Añadir Segmento.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #dfdff			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeNetwork.png')			help: 'Remover Segmento seleccionado.'.		"								"builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #ilExport			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'ilExport.png')			help: 'Exportar Configuracion en IL.'."					builder			newButtonFor: self keyboardFocusNetwork "if we had a model it would go here"			getState: nil			action: #compile			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #bootLPCLink			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'bootLPCLink.png')			help: 'Conectarse al PLC.'.						builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #downloadProgram			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'downloadProgram.png')			help: 'Descargar Programa al PLC.'.																	builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyCPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addContact.png') 			help: 'Añadir Contacto.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyBPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addCoil.png') 			help: 'Añadir Bobina.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyOPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'openBranch.png') 			help: 'Abrir Rama.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #keyPPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'closeBranch.png') 			help: 'Cerrar Rama.'.								builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyFPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunction.png') 			help: 'Añadir llamado a Función.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyGPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunctionBlock.png') 			help: 'Añadir llamado a Bloque de Función.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #generateCode			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addProgramControl.png') 			help: 'Añadir componente de Control de Ejecución.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #keyDeletePressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeSelected.png') 			help: 'Remover componente(s) seleccionado(s).'.											"		builder			newButtonFor: nil ""if we had a model it would go here""			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallNewIcon			help: 'Nuevo'.		builder			newButtonFor: nil			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallOpenIcon			help: 'Abrir'.		builder			newButtonFor: nil			getState: nil			action: #saveFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallSaveIcon			help: 'Guardar'.		builder			newButtonFor: nil			getState: nil			action: #print			arguments: nil			getEnabled: nil			labelForm: builder theme smallPrintIcon			help: 'Imprimir' 		" 	}.! !!PLC_Proyect_Editor_OLD methodsFor: 'add-remove' stamp: 'EricPernia 11/19/2013 16:37'!addNetwork	"Añade un nuevo segmento a la ventana"		^ 'Se agrego segmento.'! !!PLC_Proyect_Editor_OLD methodsFor: 'Eric' stamp: 'EricPernia 11/19/2013 16:37'!openEric	"Abre la ventana"	| content |				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		content := self builder newColumn: {		self varMenu. 				self globalVarTitle.		self varTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.	content cellInset: 0.		"hResizing: #spaceFill;		vResizing: #spaceFill;		cellSpacing: 10."	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		 (content openInWindowLabeled: 'Contactos') 		extent: 800@600.! !!PLC_Proyect_Editor_OLD methodsFor: 'Eric' stamp: 'EricPernia 11/19/2013 16:37'!openEric2	"Abre la ventana"	|builder content variablesRow menu varTitles1 varTitles2 |	builder := UITheme builder.		menu := builder newRow: {		builder newButtonFor: self 			action: #addButtonClick 			label: 'Añadir' 			help: 'Crear un contacto nuevo'.						builder newButtonFor: self 			action: #removeButtonClick 					label: 'Remover' 			help: 'Remover contacto selecccionado'.		builder newButtonFor: self 			action: #editButtonClick 					label: 'Editar' 			help: 'Editar contacto selecccionado' 		}.			varTitles1 := builder newRow: {		(self globalVarsMorph)			hResizing: #spaceFill.		}.			varTitles2 := builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.				variablesRow := builder newRow: {		(builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		(builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		(builder 			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"			varTitles1 cellInset: 0.		varTitles2 cellInset: 0.		variablesRow cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"	content := builder newColumn: {		menu.		varTitles1.		varTitles2.		variablesRow.	}.	content cellInset: 0.		"hResizing: #spaceFill;		vResizing: #spaceFill;		cellSpacing: 10."	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		 (content openInWindowLabeled: 'Contactos') 		extent: 800@600.! !!PLC_Proyect_Editor_OLD methodsFor: 'Eric' stamp: 'EricPernia 11/19/2013 16:37'!openEric3	"Abre la ventana"	| window windowExtent aWorld varDeclsContainer varDecls pouBody pouBodyContainer |				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		varDecls := self builder newColumn: {		self varMenu. 				self globalVarTitle.		self varTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.	varDecls cellInset: 0;		minHeight: 10";		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10".	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."	varDeclsContainer := varDecls.		pouBody := Morph new.	pouBodyContainer := pouBody.	"Creo la ventana y agrego los controles"	window := ( SystemWindow labelled: 'Ventana' ) model: nil.			window addMorph: varDeclsContainer fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	window addMorph: pouBodyContainer fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					"window updatePaneColors."	window extent: 800@600.		aWorld := Morph new currentWorld.		aWorld addMorph: window.	window activate.	aWorld startSteppingSubmorphsOf: window.	^ window.! !!PLC_Proyect_Editor_OLD methodsFor: 'Eric' stamp: 'EricPernia 11/19/2013 16:37'!openEric4	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window windowExtent aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Unidad de Organización de Programa (POU)' ) model: nil.		"Agrego el editor de variables"	window addMorph: self pouVarDeclEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	window addMorph: self ladderPouBodyEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_Proyect_Editor_OLD methodsFor: 'accessing' stamp: 'EricPernia 11/19/2013 16:37'!keyboardFocusNetwork	^ keyboardFocusNetwork! !!PLC_Proyect_Editor_OLD methodsFor: 'accessing' stamp: 'EricPernia 11/19/2013 16:37'!keyboardFocusNetwork: anObject	keyboardFocusNetwork := anObject! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!descriptionMorph	"devuelve un PLC_TitleMorph"	| descriptionMorph |	descriptionMorph := PLC_TitleMorph new.	descriptionMorph extent: 400@20.	descriptionMorph backgroundColor: self varTitlesColor.	descriptionMorph backgroundBorderWidth: 1.	descriptionMorph emphasis: self varTitleEmphasis.	descriptionMorph text: 'Descripción'.	descriptionMorph changed.		^ descriptionMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!inOutVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Entrada-Salida'. "Declaraciones de variables de Entrada-Salida"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!inOutVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self inOutVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!inputVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Entrada'. "Declaraciones de variables de Entrada"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!inputVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self inputVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!nameMorph	"devuelve un PLC_TitleMorph"	| nameMorph |	nameMorph := PLC_TitleMorph new.	nameMorph extent: 200@20.	nameMorph backgroundColor: self varTitlesColor.	nameMorph backgroundBorderWidth: 1.	nameMorph emphasis: self varTitlesEmphasis.	nameMorph text: 'Nombre'.	nameMorph changed.		^ nameMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!outputVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Salida'. "Declaraciones de variables de Salida"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!outputVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self outputVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!pouVarMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: PLC_GraphicElementProperties uniqueInstance programHeaderColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: 'Declaraciones de variables de POU'.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!pouVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self pouVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!tempVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Temporales'. "Declaraciones de variables Temporales"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!tempVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self tempVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!typeMorph	"devuelve un PLC_TitleMorph"	| typeMorph |	typeMorph := PLC_TitleMorph new.	typeMorph extent: 90@20.	typeMorph backgroundColor: self varTitlesColor.	typeMorph backgroundBorderWidth: 1.	typeMorph emphasis: self varTitlesEmphasis.	typeMorph text: 'Tipo'.	typeMorph changed.		^ typeMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!varTitles	"Genera la fila"	| row |	row := self builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!varVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Internas'. "Declaraciones de variables Internas"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/19/2013 16:37'!varVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self varVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!interfaceVarsColumn	"Devuelve la columna con el editor de lenguaje Ladder"		| interfaceVarsColumn |		interfaceVarsColumn := self builder newColumn: { 		self varTitles.				self inputVarTitle.		self inputVarLists. 						self outputVarTitle.		self outputVarLists. 						self inOutVarTitle.		self inOutVarLists. 		}.		interfaceVarsColumn cellInset: 0;		extent: 720 @ 20.			^ interfaceVarsColumn.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!internalVarsColumn	"Devuelve la columna con el editor de lenguaje Ladder"	| internalVarsColumn |		internalVarsColumn := self builder newColumn: { 				self varTitles.				self varVarTitle.		self varVarLists. 				self tempVarTitle.		self tempVarLists. 		}.		internalVarsColumn cellInset: 0;		extent: 720 @ 20.			^ internalVarsColumn.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!pouVarDeclEditor	"Devuelve la columna con el editor de lenguaje Ladder"		| pouVarDeclEditor exp1 exp2 eg1 |			"scroller := ( self builder newScrollPaneFor: ladderView ) 		hResizing: #spaceFill; 		vResizing: #spaceFill."	"morph1 := (PanelMorph new fillStyle: (SolidFillStyle color: Color red))		hResizing: #spaceFill;		vResizing: #spaceFill."			exp1 := ( self builder newExpander: 'Variables de interfaz' for: self interfaceVarsColumn )		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: true.		eg1 := EdgeGripMorph new		target: exp1;		edgeName: #bottom;		vResizing: #rigid;		extent: 24 @ 1;		on: #mouseDown send: #expandedSizingRigid to: exp1.		exp2 := ( self builder newExpander: 'Variables internas'  for: self internalVarsColumn )		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: false.		pouVarDeclEditor := self builder 		newColumn: { 			self pouVarTitle.			self variableToolBar.			exp1. 			eg1. 			exp2.			}.		pouVarDeclEditor cellInset: 0;		extent: 720 @ 20.			^ pouVarDeclEditor.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!varDescription		| col |	col := OrderedCollection new.		col add: 'Variable 1, representa el cambio en la corriente nominal.'.	col add: 'Variable 2, representa el cambio en la corriente nominal.'.	col add: 'Variable 3, representa el cambio en la corriente nominal.'.	col add: 'Variable 4, representa el cambio en la corriente nominal.'.		^ col.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!varInitialValue		| col |	col := OrderedCollection new.		col add: '0'.	col add: '1'.	col add: '15'.	col add: '50'.		^ col.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!varName		| col |	col := OrderedCollection new.		col add: 'variable1'.	col add: 'var_2_laaaaarga'.	col add: 'var3'.	col add: 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'.	^ col.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:37'!varType		| col |	col := OrderedCollection new.		col add: 'Bool'.	col add: 'Bool'.	col add: 'Int'.	col add: 'Int'.		^ col.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor' stamp: 'EricPernia 11/19/2013 16:40'!variableToolBar	"Genera la fila"	^ self builder newRow: {		self builder newButtonFor: self 			action: #nada 			label: 'Nueva'			help: ''.									}.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - events' stamp: 'EricPernia 11/19/2013 16:37'!hasSelectedVariable	^selectedVariableIndex > 0! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - events' stamp: 'EricPernia 11/19/2013 16:38'!variableSelectedIndex	^ selectedVariableIndex ifNil: [selectedVariableIndex := 0]! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - events' stamp: 'EricPernia 11/19/2013 16:38'!variableSelectedIndex: aSmallInteger 	selectedVariableIndex := aSmallInteger.	self 		changed: #variableSelectedIndex;  		changed: #hasSelectedVariable		! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/19/2013 16:38'!inOutVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/19/2013 16:38'!inputVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/19/2013 16:38'!outputVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/19/2013 16:38'!tempVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/19/2013 16:38'!varVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - style' stamp: 'EricPernia 11/19/2013 16:38'!varTitleColor	"Genera la fila"		^ Color gray.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - style' stamp: 'EricPernia 11/19/2013 16:38'!varTitleEmphasis	""		^ 0.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - style' stamp: 'EricPernia 11/19/2013 16:38'!varTitlesColor	"Color"		^ PLC_GraphicElementProperties uniqueInstance rowColorHeader.! !!PLC_Proyect_Editor_OLD methodsFor: 'variable editor - style' stamp: 'EricPernia 11/19/2013 16:38'!varTitlesEmphasis	""		^ 1.! !Object subclass: #PLC_Project_Editor	instanceVariableNames: 'keyboardFocusMorph project color borderColor titleColor titleName hardConfigEditor'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_Project_Editor commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_Project_Editor is xxxxxxxxx.Instance Variables	borderColor:		<Object>	color:		<Object>	hardConfigEditor:		<Object>	keyboardFocusMorph:		<Object>	project:		<Object>	titleColor:		<Object>	titleName:		<Object>borderColor	- xxxxxcolor	- xxxxxhardConfigEditor	- xxxxxkeyboardFocusMorph	- xxxxxproject	- xxxxxtitleColor	- xxxxxtitleName	- xxxxx!!PLC_Project_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 21:47'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ self proyectFilesPath , 'imagenes/'."	^ ''.! !!PLC_Project_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 21:47'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	self openWindow.! !!PLC_Project_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:49'!openWindow	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Proyecto de Automatización' ) model: nil.		"Agrego La cabecera del Editor de POU"	window addMorph: self buildProjectView fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.16 )			offsets: ( 0@0 corner: 1@0 )		).					"Agrego el editor de Configuraciones de Hardware"	"window addMorph: hardConfigEditor buildView fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		)."					window updatePaneColors.	window extent: 770@580.	window position: 10@10.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_Project_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_Project_Editor methodsFor: 'Commands' stamp: 'EricPernia 1/29/2014 23:43'!addProjectToLibrary 	"Añade su POU a la biblioteca de POUs"		project.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 23:46'!buildProjectView	"Construye la vista y se la asigna a su variable de instancia pouBodyView para recordarla"		| controls projectView | 			"Creo la colección de controls que despues se pasa a la columna morph como array"	controls := OrderedCollection new.		"Agrego la barra de herramientas"	controls add: self titleControl.	controls add: self nameControl. "Me trae tambien los botones"	"controls add: self pouToolbar."		"Creo la columna morph"	projectView := self builder newColumn: controls asArray.	"hResizing: #spaceFill;	vResizing: #shrinkWrap;	cellSpacing: 10"		projectView 		cellInset: 0";		extent: 720 @ 450".										^ projectView.			! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 21:47'!ladderPouBodyMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: self titleColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: self titleName.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 23:41'!nameControl	"Genera la fila"		| row |	row := self builder newRow: {		(self nameMorph )			"hResizing: #spaceFill".					self builder			newButtonFor: self			getState: nil			action: #addProjectToLibrary			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addToLibrary.png')			help: 'Añadir Proyecto a la Biblioteca.'.			}.			row cellInset: 0.		^ row.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/30/2014 00:45'!nameMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 693@56.	titleMorph backgroundColor: (Color r:1 g: 1 b: 1 alpha: 0.1) .	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 30.	titleMorph emphasis: 0.	titleMorph textColor: Color black.	titleMorph text: 'Nombre: ' , self project identifier.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 21:47'!pouName	"Genera la fila"		| row |	row := self builder newRow: {		(self pouNameMorph )			"hResizing: #spaceFill".					self builder			newButtonFor: self  "if we had a model it would go here"			getState: nil			action: #compile			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar.'.					self builder			newButtonFor: self  			getState: nil			action: #bootLPCLink 			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'bootLPCLink.png')			help: 'Conectarse al PLC.'.						self builder			newButtonFor: self  			getState: nil			action: #downloadProgram			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'downloadProgram.png')			help: 'Descargar Programa al PLC.'.						self builder			newButtonFor: self			getState: nil			action: #addPOUToLibrary			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addToLibrary.png')			help: 'Añadir POU a la Biblioteca.'.			}.			row cellInset: 0.		^ row.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 21:47'!pouToolbar 	"Devuelve la barra de herramientas superior de la ventana de edición de Ladder"		| builder |		"^PLC_LadderToolBarMorph new."	builder := UITheme builder.		^ builder newToolbar: {				builder			newButtonFor: self "if we had a model it would go here"			getState: nil			action: #showPOUCode			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar POU.'.					builder			newButtonFor: self			getState: nil			action: #addPOUToLibrary			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addToLibrary.png')			help: 'Añadir POU a la Biblioteca.'.		}.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 23:39'!titleControl	"Genera la fila"		| row |	row := self builder newRow: {		(self titleMorph )			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_Project_Editor methodsFor: 'hardware configurations editor' stamp: 'EricPernia 1/29/2014 23:37'!titleMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: self titleColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: self titleName.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_Project_Editor methodsFor: 'view' stamp: 'EricPernia 1/29/2014 21:47'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!borderColor		^ borderColor! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!borderColor: anObject		borderColor := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!color		^ color! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!color: anObject		color := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 22:39'!hardConfigEditor		^ hardConfigEditor! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 22:39'!hardConfigEditor: anObject		hardConfigEditor := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!keyboardFocusMorph		^ keyboardFocusMorph! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!keyboardFocusMorph: anObject		keyboardFocusMorph := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 22:39'!project		^ project! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 22:39'!project: anObject		project := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!titleColor		^ titleColor! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!titleColor: anObject		titleColor := anObject! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!titleName		^ titleName! !!PLC_Project_Editor methodsFor: 'accessing' stamp: 'EricPernia 1/29/2014 21:47'!titleName: anObject		titleName := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_Project_Editor class	instanceVariableNames: ''!!PLC_Project_Editor class methodsFor: 'instance creation' stamp: 'EricPernia 1/30/2014 01:01'!newWithProject: aProject andColor: aColor andBorderColor: aBorderColor andTitleColor: aTitleColor andTitleName: aTitleName	"Nueva instancia con cierto modelo de pou y colores"	| projectEditor |		"projectEditor es un Controlador"		projectEditor := self new.		"Seteo su Modelo"	projectEditor project: aProject. 		"Seteo los colores de su Vista"	projectEditor color: aColor.	projectEditor borderColor: aBorderColor.	projectEditor titleColor: aTitleColor.	"Seteo el titulo de la vista"	projectEditor titleName: aTitleName.		"hardConfigEditor es un Controlador"		"projectEditor hardConfigEditor: ( PLC_POU_Body_Editor 		newWithPOUBody: aProject pouBody		andColor: ( Color r: 1 g: 1 b: 1 alpha: 0.5 )  		andBorderColor: Color black 		andTitleColor:  PLC_GraphicElementProperties uniqueInstance hardConfigColor 		andTitleName: 'Configuraciones de Hardware'		)."			^ projectEditor! !ImageMorph subclass: #PLC_DesktopIcon	instanceVariableNames: 'imagePath imagePathHover action'	classVariableNames: 'InitialPosition Theme library pou project'	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_DesktopIcon commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_DesktopIcon is xxxxxxxxx.Instance Variables	action:		<Object>	imagePath:		<Object>	imagePathHover:		<Object>action	- xxxxximagePath	- xxxxximagePathHover	- xxxxx!!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 01:33'!handlesMouseDown: anEvent	"Permite manejar el evento de cuando el usuatio clickea el mouse sobre el morph."	^ true.! !!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 00:21'!handlesMouseOver: anEvent	"Permite manejar el evento de que el puntero pasa sobre el morph."	^true.! !!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 01:33'!mouseDown: anEvent	"Manejador del evento mouse down"	"Do nothing upon mouse-down except inform the hand to watch for a double-click; wait until an 	ensuing click:, doubleClick:, or drag: message gets dispatched"	"Note that mouseMove: and mouseUp: events are not sent to aMorph until it becomes the mouse focus,	which is typically done by aMorph in its click:, doubleClick:, or drag: methods."		anEvent redButtonPressed "click"		ifTrue: [			anEvent hand				waitForClicksOrDrag: self				event: anEvent				selectors: {#leftClick:. #leftDoubleClick:. #leftDoubleClickTimeout:. #startDrag:.}				threshold: 5.								].				anEvent yellowButtonPressed "action-click"		ifTrue: [			anEvent hand				waitForClicksOrDrag: self				event: anEvent				selectors: {#rightClick:. #rightDoubleClick:. #rightDoubleClickTimeout:. nil.}				threshold: 5.			].! !!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 00:21'!mouseEnter: anEvent	"Manejador del evento mouse enter. Este mensaje se le envia al 	morph cuando el puntero del mouse empieza a pasar por el."	self mouseOver.! !!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 00:21'!mouseLeave: anEvent	"Manejador del evento mouse leave. Este mensaje se le envia al 	morph cuando el puntero del mouse deja de pasarpor el."	self mouseOut.! !!PLC_DesktopIcon methodsFor: 'event handling' stamp: 'EricPernia 5/30/2013 01:34'!mouseUp: anEvent	"Manejador del evento mouse up"		! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 01:27'!action	^ action! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 01:27'!action: anObject	action := anObject! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 00:21'!imagePath	^ imagePath! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 00:21'!imagePath: anObject	imagePath := anObject! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 00:22'!imagePathHover	^ imagePathHover! !!PLC_DesktopIcon methodsFor: 'accessing' stamp: 'EricPernia 5/30/2013 00:22'!imagePathHover: anObject	imagePathHover := anObject! !!PLC_DesktopIcon methodsFor: 'initialize-release' stamp: 'EricPernia 5/17/2014 02:06'!desktopIconsPath	"Devuelve el path de imagenes"	^ 'IDE4PLC_files/GUI_Images/desktopIcons/'! !!PLC_DesktopIcon methodsFor: 'initialize-release' stamp: 'EricPernia 5/15/2014 03:11'!initialize	"Inicialización del ícono"	super initialize.		self imagePath: self desktopIconsPath , 'Project.png'.	self imagePathHover: self desktopIconsPath , 'Project_hover_blue.png'.			self image: ( Form fromFileNamed: self imagePath ).		self openInWorld.! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 11/19/2013 16:15'!leftClick: anEvent	"Manejador del evento Click con boton izquiedo del mouse"	"(click) sent when the mouse button goes up within doubleClickTime."			self action open.! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:47'!leftDoubleClick: anEvent	"Manejador del evento doble click con el boton izquierdo del mouse"	"(doubleClick) sent when the mouse goes up, down, and up again all within DoubleClickTime."! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:39'!leftDoubleClickTimeout: anEvent	"Manejador del evento doble click timeout con el boton izquierdo del mouse"	"(doubleClickTimeout) sent when the mouse does not have a doubleClick within DoubleClickTime."! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 00:24'!mouseOut	"Cuando el mouse está fuera del ícono cambia su imagen"	self image: ( Form fromFileNamed: self imagePath ).! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 00:24'!mouseOver	"Cuando el mouse está sobre el ícono cambia su imagen"	self image: ( Form fromFileNamed: self imagePathHover ).! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:52'!rightClick: anEvent	"Manejador del evento Click con boton izquiedo del mouse"	"(click) sent when the mouse button goes up within doubleClickTime."! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:39'!rightDoubleClick: anEvent	"Manejador del evento doble click con el boton izquierdo del mouse"	"(doubleClick) sent when the mouse goes up, down, and up again all within DoubleClickTime."	! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:39'!rightDoubleClickTimeout: anEvent	"Manejador del evento doble click timeout con el boton izquierdo del mouse"	"(doubleClickTimeout) sent when the mouse does not have a doubleClick within DoubleClickTime."! !!PLC_DesktopIcon methodsFor: 'mouse events' stamp: 'EricPernia 5/30/2013 01:55'!startDrag: anEvent	"Manejador del evento doble click timeout con el boton izquierdo del mouse"	"(startDrag) sent when the mouse moves more than threshold pixels from evt's position within DoubleClickTime."			anEvent hand grabMorph: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_DesktopIcon class	instanceVariableNames: ''!!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 5/31/2013 02:16'!blackTheme	"Cambia el Tema a tema negro"		Theme := 'black'.! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 5/31/2013 02:16'!blueTheme	"Cambia el Tema a tema azul"		Theme := 'blue'.! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 11/19/2013 16:21'!library 	^ library ! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 11/19/2013 16:20'!pou 	^ pou! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 11/19/2013 16:20'!project 	^ project ! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 5/31/2013 02:16'!screen1920x1080	"Indica la posicion de los iconos cuando la pantalla es de 1920x1080 px"		InitialPosition := 20@20. ! !!PLC_DesktopIcon class methodsFor: 'class variables' stamp: 'EricPernia 5/31/2013 02:16'!screen800x600	"Indica la posicion de los iconos cuando la pantalla es de 800 x600 px"		InitialPosition := 83@200. ! !!PLC_DesktopIcon class methodsFor: 'instance creation' stamp: 'EricPernia 2/17/2014 01:37'!createIcons	"Crea todos los Iconos"		project := self projectIcon.	pou := self pouIcon.	library := self pouLibraryIcon.	! !!PLC_DesktopIcon class methodsFor: 'instance creation' stamp: 'EricPernia 5/15/2014 03:16'!pouIcon	"Devuelve un nuevo DesktopIcon de Crear POU"		| icon pouEditor |			icon := PLC_DesktopIcon new.	icon imagePath: icon desktopIconsPath , 'POU.png'.	icon imagePathHover: icon desktopIconsPath , 'POU_hover_' , Theme , '.png'.	icon mouseOut.	icon position: InitialPosition + (130@0). 			"Creo un nuevo editor de POU"	pouEditor := PLC_POU_Editor 		newWithPOU: PLeriC pou		andColor: ( Color r: 1 g: 1 b: 1 alpha: 0.5 )  		andBorderColor: Color black 		andTitleColor:  PLC_GraphicElementProperties uniqueInstance programColor 		andTitleName: 'POU: PROGRAMA'.			"ACA LE PASO A AQUIEN LE DICE OPEN"	icon action: pouEditor.		^ icon.! !!PLC_DesktopIcon class methodsFor: 'instance creation' stamp: 'EricPernia 5/15/2014 03:16'!pouLibraryIcon	"Devuelve un nuevo DesktopIcon de Biblioteca de POUs"		| icon |			icon := PLC_DesktopIcon new.	icon imagePath: icon desktopIconsPath , 'POULibrary.png'.	icon imagePathHover: icon desktopIconsPath , 'POULibrary_hover_' , Theme , '.png'.	icon mouseOut.	icon position: InitialPosition + (260@0). 		"ACA LE PASO A AQUIEN LE DICE OPEN -  	Con open PLeriC resetea la declaracion de programa"	icon action: PLeriC.	^ icon.! !!PLC_DesktopIcon class methodsFor: 'instance creation' stamp: 'EricPernia 5/15/2014 03:16'!projectIcon	"Devuelve un nuevo DesktopIcon de Proyecto"		| icon |			icon := PLC_ProIcon new.	icon imagePath: icon desktopIconsPath , 'Project.png'.	icon imagePathHover: icon desktopIconsPath , 'Project_hover_' , Theme , '.png'.	icon mouseOut.	icon position: InitialPosition.		^ icon.		"Devuelve un nuevo DesktopIcon de Crear POU"	"	| icon pouEditor |			icon := PLC_DesktopIcon new.	icon imagePath: 'POU.png'.	icon imagePathHover: 'POU_hover_' , Theme , '.png'.	icon mouseOut.	icon position: InitialPosition + (130@0). 	"		"Creo un nuevo editor de POU""	pouEditor := PLC_POU_Editor 		newWithPOU: PLeriC pou		andColor: ( Color r: 1 g: 1 b: 1 alpha: 0.5 )  		andBorderColor: Color black 		andTitleColor:  PLC_GraphicElementProperties uniqueInstance programColor 		andTitleName: 'POU: PROGRAMA'.	"		"ACA LE PASO A AQUIEN LE DICE OPEN""	icon action: pouEditor.		^ icon."! !PLC_DesktopIcon subclass: #PLC_ProIcon	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_ProIcon commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_ProIcon is xxxxxxxxx.Instance Variables!!PLC_ProIcon methodsFor: 'as yet unclassified' stamp: 'EricPernia 5/17/2014 04:00'!leftClick: anEvent	"Manejador del evento Click con boton izquiedo del mouse"	"(click) sent when the mouse button goes up within doubleClickTime."			| editorConfigHard |			editorConfigHard := PLC_ImageOpenSuicide new.	editorConfigHard imagePath: 'IDE4PLC_files/GUI_Images/dummy/configHW.png'.	editorConfigHard mouseOut.	editorConfigHard position: 10@10.! !Object subclass: #PLC_POU_Body_Editor	instanceVariableNames: 'keyboardFocusMorph pouBody pouBodyView color borderColor titleColor titleName'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_POU_Body_Editor commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_POU_Body_Editor is xxxxxxxxx.Instance Variables	borderColor:		<Object>	color:		<Object>	keyboardFocusMorph:		<Object>	pouBody:		<Object>	pouBodyView:		<Object>	titleColor:		<Object>	titleName:		<Object>borderColor	- xxxxxcolor	- xxxxxkeyboardFocusMorph	- xxxxxpouBody	- xxxxxpouBodyView	- xxxxxtitleColor	- xxxxxtitleName	- xxxxx!!PLC_POU_Body_Editor methodsFor: 'il editor' stamp: 'EricPernia 11/17/2013 14:50'!ilPouBodyEditor	"Devuelve la columna con el editor de lenguaje IL"		"HACER"! !!PLC_POU_Body_Editor methodsFor: 'open/close' stamp: 'EricPernia 5/17/2014 03:11'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	^ 'IDE4PLC_files/GUI_Images/pouEditorToolbar/'.! !!PLC_POU_Body_Editor methodsFor: 'open/close' stamp: 'EricPernia 11/17/2013 16:29'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Cuerpo de POU' ) model: nil.		"Agrego el editor de ladder"	window addMorph: self pouBodyView fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_POU_Body_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_POU_Body_Editor methodsFor: 'fbd editor' stamp: 'EricPernia 11/17/2013 14:50'!fbdPouBodyEditor	"Devuelve la columna con el editor de lenguaje FBD"		"HACER"! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!addCoilPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyBPressed			 ]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!addFunctionBlockPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyGPressed			 ]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!addFunctionPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyFPressed			 ]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!addLadderComponentPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			"self keyboardFocusMorph keyQPressed"			 ]	 ! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!addNOContactPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyCPressed			]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/17/2013 17:11'!addNetwork	"Este comando modifica el modelo eliminando la network con el foco del teclado"	pouBody addNetwork		"Falta, tiene que redibujar todo el editor"! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!closeBranchPressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyPPressed			]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!deletePressed	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyDeletePressed 			]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:44'!drawGroups	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph drawGroups 			]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:45'!generateCode	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph generateCode 			]! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:45'!openBranchPressed 	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph keyOPressed			] ! !!PLC_POU_Body_Editor methodsFor: 'ladder Commands' stamp: 'EricPernia 11/18/2013 04:45'!removeNetwork	"Este comando modifica el modelo eliminando la network con el foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			pouBody removeNetwork: self keyboardFocusMorph.			]		"Falta, tiene que redibujar todo el editor"! !!PLC_POU_Body_Editor methodsFor: 'ladder editor' stamp: 'EricPernia 11/18/2013 14:51'!buildLadderView	"Construye la vista y se la asigna a su variable de instancia pouBodyView para recordarla"		| controller networkModel ladderView scroller expander controls | 			"Creo la colección de controls que despues se pasa a la columna morph como array"	controls := OrderedCollection new.		"Agrego la barra de herramientas"	controls add: self pouLadderTitle.	controls add: self ladderToolbar.			"Crequeo que haya al menos una network"	( self pouBody networks size > 0 )		ifTrue: [ 			"networkModel es el modelo de network ladder"			networkModel := pouBody networks at: 1.				"Controlador de la network Ladder"			controller := PLC_LadderController newWithModel: networkModel. 					"Vista de la network Ladder"			ladderView := controller openLadderView.				"Le agrego a la vista de network ladder una referencia a 			este controlador editor de cuerpod e pou"			ladderView editor: self.				"A la primera network le doy el foco del teclado"			self keyboardFocusMorph: ladderView.				"Le creo los scroller al ladderView"			scroller := ( self builder newScrollPaneFor: ladderView ) 				hResizing: #spaceFill; 				vResizing: #spaceFill.			"Le creo el expander sobre los scroller al ladderView"			expander := ( self builder newExpander: 'Segmento 1'  for: scroller ) 				spaceFillWeight: 1; 				expanded: true.					"Agrego el expander a la colección que forma la columna"			controls add: expander.						]. 			"Repito todos los pasos anteriores para als demas networks salvo que no 	les agrego el foco del teclado ni expando sus expanders"	(2 to: pouBody networks size) do: [ :index |				"networkModel es el modelo de network ladder"		networkModel := pouBody networks at: index.				"Controlador de la network Ladder"		controller := PLC_LadderController newWithModel: networkModel. 				"Vista de la network Ladder"		ladderView := controller openLadderView.			"Le agrego a la vista de network ladder una referencia a 		este controlador editor de cuerpod e pou"		ladderView editor: self.				"Le creo los scroller al ladderView"		scroller := ( self builder newScrollPaneFor: ladderView ) 			hResizing: #spaceFill; 			vResizing: #spaceFill.		"Le creo el expander sobre los scroller al ladderView"		expander := ( self builder newExpander: 'Segmento ' , index asString for: scroller ) 			spaceFillWeight: 1; 			expanded: false.							"Agrego el expander a la colección que forma la columna"		controls add: expander.		 ].	"Creo la columna morph"	pouBodyView := self builder newColumn: controls asArray.	"hResizing: #spaceFill;	vResizing: #shrinkWrap;	cellSpacing: 10"		pouBodyView 		cellInset: 0";		extent: 720 @ 450".										^ pouBodyView.			! !!PLC_POU_Body_Editor methodsFor: 'ladder editor' stamp: 'EricPernia 11/17/2013 15:17'!ladderPouBodyMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: self titleColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: self titleName.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Body_Editor methodsFor: 'ladder editor' stamp: 'EricPernia 11/17/2013 16:57'!ladderToolbar 	"Devuelve la barra de herramientas superior de la ventana de edición de Ladder"		| builder |		"^PLC_LadderToolBarMorph new."	builder := UITheme builder.		^ builder newToolbar: {				builder			newButtonFor: self "if we had a model it would go here"			getState: nil			action: #addNetwork "drawGroups"			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addNetwork.png')			help: 'Añadir Segmento.'.					builder			newButtonFor: self			getState: nil			action: #removeNetwork			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeNetwork.png')			help: 'Remover Segmento seleccionado.'.				builder			newButtonFor: self			getState: nil			action: #addNOContactPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addContact.png') 			help: 'Añadir Contacto.'.					builder			newButtonFor: self 			getState: nil			action: #addCoilPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addCoil.png') 			help: 'Añadir Bobina.'.					builder			newButtonFor: self 			getState: nil			action: #openBranchPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'openBranch.png') 			help: 'Abrir Rama.'.  					builder			newButtonFor: self			getState: nil			action: #closeBranchPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'closeBranch.png') 			help: 'Cerrar Rama.'.								builder			newButtonFor: self			getState: nil			action: #addLadderComponentPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addLadderComponent.png') 			help: 'Añadir componente Ladder.'.						builder			newButtonFor: self			getState: nil			action: #addFunctionPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunction.png') 			help: 'Añadir llamado a Función.'.					builder			newButtonFor: self			getState: nil			action: #addFunctionBlockPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunctionBlock.png') 			help: 'Añadir llamado a Bloque de Función.'.					builder			newButtonFor: self			getState: nil			action: #generateCode			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addProgramControl.png') 			help: 'Añadir componente de Control de Ejecución.'.					builder			newButtonFor: self			getState: nil			action: #deletePressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeSelected.png') 			help: 'Remover componente(s) seleccionado(s).'.											"		builder			newButtonFor: nil ""if we had a model it would go here""			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallNewIcon			help: 'Nuevo'.		builder			newButtonFor: nil			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallOpenIcon			help: 'Abrir'.		builder			newButtonFor: nil			getState: nil			action: #saveFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallSaveIcon			help: 'Guardar'.		builder			newButtonFor: nil			getState: nil			action: #print			arguments: nil			getEnabled: nil			labelForm: builder theme smallPrintIcon			help: 'Imprimir' 		" 	}.! !!PLC_POU_Body_Editor methodsFor: 'ladder editor' stamp: 'EricPernia 11/18/2013 14:51'!pouLadderTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self ladderPouBodyMorph )			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 15:08'!borderColor		^ borderColor! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 15:08'!borderColor: anObject		borderColor := anObject! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 15:08'!color		^ color! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 15:08'!color: anObject		color := anObject! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 04:38'!keyboardFocusMorph	"EN ESTE CASO ES UNA NETWORK"		^ keyboardFocusMorph! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 04:37'!keyboardFocusMorph: anObject	keyboardFocusMorph := anObject! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:58'!pouBody		^ pouBody! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:58'!pouBody: anObject		pouBody := anObject! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 16:17'!pouBodyView	"Devuelve una vista de pouBody si no existia la crea"	pouBodyView ifNil: [ 		( pouBody language = 'LADDER DIAGRAM' )			ifTrue: [ self buildLadderView  ].		"( pouBody language = 'INSTRUCTION LIST' )			ifTrue: [ self buildILView  ].		( pouBody language = '' )			ifTrue: [ self buildStandardView  ]."		].			^pouBodyView! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:59'!titleColor		^ titleColor! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:59'!titleColor: anObject		titleColor := anObject! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:59'!titleName		^ titleName! !!PLC_POU_Body_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 14:59'!titleName: anObject		titleName := anObject! !!PLC_POU_Body_Editor methodsFor: 'view' stamp: 'EricPernia 11/17/2013 14:50'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_POU_Body_Editor methodsFor: 'view' stamp: 'EricPernia 11/17/2013 15:09'!clearView	"Elimina la Vista"	pouBodyView := nil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_POU_Body_Editor class	instanceVariableNames: ''!!PLC_POU_Body_Editor class methodsFor: 'instance creation' stamp: 'EricPernia 11/17/2013 16:22'!newWithPOUBody: aPOUBody andColor: aColor andBorderColor: aBorderColor andTitleColor: aTitleColor andTitleName: aTitleName	"Nueva instancia con cierto modelo de cuerpo de pou y colores"	| pouBodyEditor |	"pouBodyEditor es un Controlador"		pouBodyEditor := self new.		"Seteo su Modelo"	pouBodyEditor pouBody: aPOUBody.		"Seteo los colores de su Vista"	pouBodyEditor color: aColor.	pouBodyEditor borderColor: aBorderColor.	pouBodyEditor titleColor: aTitleColor.	"Seteo el titulo de la vista"	pouBodyEditor titleName: aTitleName.		^ pouBodyEditor! !Object subclass: #PLC_POU_Declarations_Editor	instanceVariableNames: 'selectedIndex keyboardFocusMorph pouDeclarations pouDeclarationsView color borderColor titleColor titleName'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_POU_Declarations_Editor commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_POU_Declarations_Editor is xxxxxxxxx.Instance Variables	borderColor:		<Object>	color:		<Object>	keyboardFocusMorph:		<Object>	pouDeclarations:		<Object>	pouDeclarationsView:		<Object>	selectedIndex:		<Object>	titleColor:		<Object>	titleName:		<Object>borderColor	- xxxxxcolor	- xxxxxkeyboardFocusMorph	- xxxxxpouDeclarations	- xxxxxpouDeclarationsView	- xxxxxselectedIndex	- xxxxxtitleColor	- xxxxxtitleName	- xxxxx!!PLC_POU_Declarations_Editor methodsFor: 'open/close' stamp: 'EricPernia 11/17/2013 17:50'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ self proyectFilesPath , 'imagenes/'."	^ ''.! !!PLC_POU_Declarations_Editor methodsFor: 'open/close' stamp: 'EricPernia 11/18/2013 04:31'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Declaraciones de Variables de POU' ) model: nil.		"Agrego el editor de variables"	window addMorph: self pouDeclarationsView fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.5 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	"window addMorph: self ladderPouBodyEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).	"				window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_POU_Declarations_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_POU_Declarations_Editor methodsFor: 'declarations Commands' stamp: 'EricPernia 11/18/2013 07:17'!addButtonClick  	"Este comando modifica el modelo añadiendo una nueva declaracion de variable"	| decl |	self keyboardFocusMorph		ifNotNil: [ 			decl := pouDeclarations inputVarDecls detect: [ 					self keyboardFocusMorph morpAt: self keyboardFocusMorph selectedIndex ] 				ifNone: [].			decl variableCategory remove: decl.									"Refresca la vista"			self refreshKeyboardFocusMorph.			].		! !!PLC_POU_Declarations_Editor methodsFor: 'declarations Commands' stamp: 'EricPernia 11/18/2013 07:11'!refreshKeyboardFocusMorph	"Refresco la Vista, primero le cambio su rows por el nuevo contenido"	(self keyboardFocusMorph identifier = 'interfaceVarsGridMorph')			ifTrue: [ 			self keyboardFocusMorph  rows: self interfaceVarsGridMorphRows.			]		ifFalse: [ 			self keyboardFocusMorph  rows: self nonIinterfaceVarsGridMorphRows.				].		self keyboardFocusMorph refresh.! !!PLC_POU_Declarations_Editor methodsFor: 'declarations Commands' stamp: 'EricPernia 11/18/2013 07:18'!removeButtonClick  	"Este comando modifica el modelo eliminando la declaracion de variable seleccionada"	| decl |	self keyboardFocusMorph		ifNotNil: [ 			decl := pouDeclarations inputVarDecls declarations detect: [ 					self keyboardFocusMorph morpAt: self keyboardFocusMorph selectedIndex ] 				ifNone: [].			decl variableCategory remove: decl.									"Refresca la vista"			self refreshKeyboardFocusMorph.			].		! !!PLC_POU_Declarations_Editor methodsFor: 'declarations Commands' stamp: 'EricPernia 11/18/2013 07:10'!textChangedInView: aPoint by: aString	"Recivo de la vista (gridMorph) un punto (fila@columna) y el texto para  modificar el modelo"	| gridRowNumber gridColNumber decls |	gridRowNumber := aPoint x.	gridColNumber := aPoint y.		decls := OrderedCollection new.		"Aca decido si es el grid de las variables de interfaz o el otro.	Y agrego a la OC decls todas las declaraciones de variables en 	el mismo orden que estan en los grid."	(self keyboardFocusMorph identifier = 'interfaceVarsGridMorph')			ifTrue: [ 			decls addAll: pouDeclarations inputVarDecls.			decls addAll: pouDeclarations inOutVarDecls.			decls addAll: pouDeclarations outputVarDecls.			]		ifFalse: [ 			decls addAll: pouDeclarations varDecls.			decls addAll: pouDeclarations tempVarDecls.			decls addAll: pouDeclarations constantVarDecls.				decls addAll: pouDeclarations externVarDecls.						].		"Aca habría que cambiar la categoría"	(gridColNumber = 1)		ifTrue: [ 						].		"Aca habría que cambiar el nombre"	(gridColNumber = 2)		ifTrue: [ 			( decls at: gridRowNumber ) identifier: aString.			].	"Aca habría que cambiar el Tipo"	(gridColNumber = 3)		ifTrue: [ 			"Tengo que esctibir de la forma Bool o Int, etc."			( decls at: gridRowNumber ) dataType: (PLC_DataType perform: aString asSymbol) .			"Tengo que refrescar tambien el valor inicial"			( decls at: gridRowNumber ) initialValue: ( decls at: gridRowNumber ) dataType initialValue.			].	"Aca habría que cambiar el Valor Inicial"	(gridColNumber = 4)		ifTrue: [ 			"aString Parseado pedorramente - Es true, false o numero"			( ( decls at: gridRowNumber ) dataType = PLC_DataType Bool )				ifTrue: [					( decls at: gridRowNumber ) initialValue: ( 						PLC_Literal 							newWithDataType: ( decls at: gridRowNumber ) dataType 							andDataValue: 								( (aString = 'true') or: [(aString = 'True') or: [aString = 'TRUE'] ] ) 						).					]				ifFalse: [					( decls at: gridRowNumber ) initialValue: ( 						PLC_Literal 							newWithDataType: ( decls at: gridRowNumber ) dataType 							andDataValue: aString asNumber						).					].			].		"Aca habría que cambiar la Descripción"	(gridColNumber = 5)		ifTrue: [ 			( decls at: gridRowNumber ) description: aString.			].							"Refresco la Vista, primero le cambio su rows por el nuevo contenido"	self refreshKeyboardFocusMorph.! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!borderColor		^ borderColor! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!borderColor: anObject		borderColor := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!color		^ color! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!color: anObject		color := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 04:36'!keyboardFocusMorph		^ keyboardFocusMorph! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 04:36'!keyboardFocusMorph: anObject		keyboardFocusMorph := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:55'!pouDeclarations		^ pouDeclarations! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:54'!pouDeclarations: anObject		pouDeclarations := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:53'!pouDeclarationsView	"Devuelve una vista de pouBody si no existia la crea"	pouDeclarationsView ifNil: [ 		self buildDeclsView		].			^pouDeclarationsView! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!titleColor		^ titleColor! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!titleColor: anObject		titleColor := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!titleName		^ titleName! !!PLC_POU_Declarations_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 17:50'!titleName: anObject		titleName := anObject! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/17/2013 17:50'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 04:56'!clearView	"Elimina la Vista"	pouDeclarationsView := nil.! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 06:45'!interfaceVarsGridMorph	"Devuelve el morph grid con sus rows"	^ PLC_Grid newWithRows: self interfaceVarsGridMorphRows.! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 06:44'!interfaceVarsGridMorphRows	"Devuelve el contenido del gridMorph"		| decls rows col |		rows := OrderedCollection new.	col := OrderedCollection new.		decls := pouDeclarations inputVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].		decls := pouDeclarations inOutVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].		decls := pouDeclarations outputVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].	^ rows.! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 06:45'!nonIinterfaceVarsGridMorph	"Devuelve el morph grid con sus rows"	^ PLC_Grid newWithRows: self nonIinterfaceVarsGridMorphRows.! !!PLC_POU_Declarations_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 06:44'!nonIinterfaceVarsGridMorphRows	"Devuelve  el contenido del grid morph"		| decls rows col |		rows := OrderedCollection new.	col := OrderedCollection new.		decls := pouDeclarations varDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].		decls := pouDeclarations tempVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].		decls := pouDeclarations constantVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].		decls := pouDeclarations externVarDecls.	decls do: [ :decl |		"Junto los valores de columnas de una fila"		col add:  'VAR' , decls varType.		col add: decl identifier.		col add: decl dataType ilCompile.		col add: decl initialValue ilCompile.		col add: decl description.				"Las agrego a la fila"		rows add: col.				"Reseteo la Columna antes de la proxima iteracion"		col := OrderedCollection new.		].	^ rows.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/18/2013 04:48'!pouVarMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: PLC_GraphicElementProperties uniqueInstance programHeaderColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: 'Declaraciones de variables de POU'.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/18/2013 04:48'!pouVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self pouVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.	! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 17:59'!varTitleColor	"Genera la fila"		^ Color gray.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 17:59'!varTitleEmphasis	""		^ 0.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 17:59'!varTitlesColor	"Color"		^ PLC_GraphicElementProperties uniqueInstance rowColorHeader.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 17:59'!varTitlesEmphasis	""		^ 1.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor' stamp: 'EricPernia 11/18/2013 05:17'!buildDeclsView	"Construye la vista y se la asigna a su variable de instancia pouDeclarationsView para recordarla"		| scroller gridMorph exp1 exp2 eg1 | 		"scroller := ( self builder newScrollPaneFor: ladderView ) 		hResizing: #spaceFill; 		vResizing: #spaceFill."	"morph1 := (PanelMorph new fillStyle: (SolidFillStyle color: Color red))		hResizing: #spaceFill;		vResizing: #spaceFill."			gridMorph := self interfaceVarsGridMorph.	gridMorph editor: self.	gridMorph controller: self.	gridMorph identifier: 'interfaceVarsGridMorph'.	self keyboardFocusMorph: gridMorph.					scroller := ( self builder newScrollPaneFor: gridMorph ) 		hResizing: #spaceFill; 		vResizing: #spaceFill.	exp1 := ( self builder newExpander: 'Variables de interfaz' for: scroller ) 		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: true.		eg1 := EdgeGripMorph new		target: exp1;		edgeName: #bottom;		vResizing: #rigid;		extent: 24 @ 1;		on: #mouseDown send: #expandedSizingRigid to: exp1.					gridMorph := self nonIinterfaceVarsGridMorph.	gridMorph editor: self.	gridMorph controller: self.	gridMorph identifier: 'nonIinterfaceVarsGridMorph'.			scroller := ( self builder newScrollPaneFor: gridMorph ) 		hResizing: #spaceFill; 		vResizing: #spaceFill.	exp2 := ( self builder newExpander: 'Variables Internas y Externas' for: scroller ) 		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: false.		pouDeclarationsView := self builder 		newColumn: { 			self pouVarTitle.			self variableToolBar.			exp1. 			eg1. 			exp2.			}.		pouDeclarationsView cellInset: 0;		extent: 732 @ 60.			^ pouDeclarationsView.						! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor' stamp: 'EricPernia 11/18/2013 07:14'!variableToolBar	"Genera la fila"	^ self builder newRow: {		self builder newButtonFor: self 			action: #addButtonClick 			label: 'Añadir Declaración de Variable' 			help: 'Abre el dialogo para añadir una Declaración de Variable.'.						self builder newButtonFor: self 			action: #removeButtonClick 					label: 'Remover Declaración de Variable' 			help: 'Remueve la Declaración de Variable seleccionada.'.		}.! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - events' stamp: 'EricPernia 11/17/2013 17:59'!variableSelectedIndex	^ selectedVariableIndex ifNil: [selectedVariableIndex := 0]! !!PLC_POU_Declarations_Editor methodsFor: 'variable editor - events' stamp: 'EricPernia 11/17/2013 17:59'!variableSelectedIndex: aSmallInteger 	selectedVariableIndex := aSmallInteger.	self 		changed: #variableSelectedIndex;  		changed: #hasSelectedVariable		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_POU_Declarations_Editor class	instanceVariableNames: ''!!PLC_POU_Declarations_Editor class methodsFor: 'instance creation' stamp: 'EricPernia 11/17/2013 17:58'!newWithPOUDeclarations: aPOUDecls andColor: aColor andBorderColor: aBorderColor andTitleColor: aTitleColor andTitleName: aTitleName	"Nueva instancia con cierto modelo de cuerpo de pou y colores"	| pouDeclsEditor |	"pouDeclsEditor es un Controlador"		pouDeclsEditor := self new.		"Seteo su Modelo"	pouDeclsEditor pouDeclarations: aPOUDecls.		"Seteo los colores de su Vista"	pouDeclsEditor color: aColor.	pouDeclsEditor borderColor: aBorderColor.	pouDeclsEditor titleColor: aTitleColor.	"Seteo el titulo de la vista"	pouDeclsEditor titleName: aTitleName.		^ pouDeclsEditor! !PLC_DesktopIcon subclass: #PLC_ImageOpenSuicide	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_ImageOpenSuicide commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_ImageOpenSuicide is xxxxxxxxx.Instance Variables!!PLC_ImageOpenSuicide methodsFor: 'as yet unclassified' stamp: 'EricPernia 11/19/2013 16:56'!handlesMouseOver: anEvent	"Permite manejar el evento de que el puntero pasa sobre el morph."	^false.! !!PLC_ImageOpenSuicide methodsFor: 'as yet unclassified' stamp: 'EricPernia 5/17/2014 04:00'!leftClick: anEvent	"Manejador del evento Click con boton izquiedo del mouse"	"(click) sent when the mouse button goes up within doubleClickTime."			| editorConfigSoft |			editorConfigSoft := PLC_ImageSuicide new.	editorConfigSoft imagePath: 'IDE4PLC_files/GUI_Images/dummy/configSW.png'.	editorConfigSoft mouseOut.	editorConfigSoft position: 10@10.			self delete.! !Object subclass: #PLC_POU_Editor	instanceVariableNames: 'keyboardFocusMorph pou color borderColor titleColor titleName pouBodyEditor pouDeclsEditor'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_POU_Editor commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_POU_Editor is xxxxxxxxx.Instance Variables	borderColor:		<Object>	color:		<Object>	keyboardFocusMorph:		<Object>	pou:		<Object>	pouBodyEditor:		<Object>	pouDeclsEditor:		<Object>	titleColor:		<Object>	titleName:		<Object>borderColor	- xxxxxcolor	- xxxxxkeyboardFocusMorph	- xxxxxpou	- xxxxxpouBodyEditor	- xxxxxpouDeclsEditor	- xxxxxtitleColor	- xxxxxtitleName	- xxxxx!!PLC_POU_Editor methodsFor: 'open/close' stamp: 'EricPernia 5/17/2014 03:10'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	^ 'IDE4PLC_files/GUI_Images/pouEditorToolbar/'.! !!PLC_POU_Editor methodsFor: 'open/close' stamp: 'EricPernia 11/18/2013 15:54'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	self openWindow.! !!PLC_POU_Editor methodsFor: 'open/close' stamp: 'EricPernia 11/18/2013 15:53'!openWindow	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Unidad de Organización de Programa (POU)' ) model: nil.		"Agrego La cabecera del Editor de POU"	window addMorph: self buildPOUView fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.16 )			offsets: ( 0@0 corner: 1@0 )		).					"Agrego el editor de variables"	window addMorph: pouDeclsEditor buildDeclsView fullFrame: (		LayoutFrame 			fractions: ( 0@0.16 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	window addMorph: pouBodyEditor buildLadderView fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 770@580.	window position: 10@10.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_POU_Editor methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/18/2013 17:54'!addPOUToLibrary 	"Añade su POU a la biblioteca de POUs"		pou.! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/19/2013 17:20'!bootLPCLink 	PLeriC bootLPCLink! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/19/2013 17:19'!compile 	PLeriC cCompileConfigSoft! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/19/2013 17:20'!downloadProgram 	PLeriC downloadProgram! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/18/2013 14:09'!generateCode	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	self keyboardFocusMorph 		ifNotNil: [ 			self keyboardFocusMorph generateCode 			]! !!PLC_POU_Editor methodsFor: 'Commands' stamp: 'EricPernia 11/18/2013 17:48'!showPOUCode 	"Reenvia el comando correspondiente al boton de la ladderToolBar 	pulsado a la network con foco del teclado"	| configSoft |	configSoft := PLeriC createConfigSoftWithPOU: pou.		configSoft cCompile.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/18/2013 15:43'!buildPOUView	"Construye la vista y se la asigna a su variable de instancia pouBodyView para recordarla"		| controls pouView | 			"Creo la colección de controls que despues se pasa a la columna morph como array"	controls := OrderedCollection new.		"Agrego la barra de herramientas"	controls add: self pouTitle.	controls add: self pouName. "Me trae tambien los botones"	"controls add: self pouToolbar."		"Creo la columna morph"	pouView := self builder newColumn: controls asArray.	"hResizing: #spaceFill;	vResizing: #shrinkWrap;	cellSpacing: 10"		pouView 		cellInset: 0";		extent: 720 @ 450".										^ pouView.			! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/18/2013 14:09'!ladderPouBodyMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: self titleColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: self titleName.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/19/2013 17:28'!pouName	"Genera la fila"		| row |	row := self builder newRow: {		(self pouNameMorph )			"hResizing: #spaceFill".					self builder			newButtonFor: self  "if we had a model it would go here"			getState: nil			action: #compile			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar.'.					self builder			newButtonFor: self  			getState: nil			action: #bootLPCLink 			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'bootLPCLink.png')			help: 'Conectarse al PLC.'.						self builder			newButtonFor: self  			getState: nil			action: #downloadProgram			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'downloadProgram.png')			help: 'Descargar Programa al PLC.'.						self builder			newButtonFor: self			getState: nil			action: #addPOUToLibrary			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addToLibrary.png')			help: 'Añadir POU a la Biblioteca.'.			}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/19/2013 17:29'!pouNameMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 488@56.	titleMorph backgroundColor: (Color r:1 g: 1 b: 1 alpha: 0.1) .	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 30.	titleMorph emphasis: 0.	titleMorph textColor: Color black.	titleMorph text: 'Nombre: ' , self pou identifier.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/18/2013 14:53'!pouTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self pouTitleMorph )			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/18/2013 14:56'!pouTitleMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: self titleColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: self titleName.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Editor methodsFor: 'pou editor' stamp: 'EricPernia 11/18/2013 15:26'!pouToolbar 	"Devuelve la barra de herramientas superior de la ventana de edición de Ladder"		| builder |		"^PLC_LadderToolBarMorph new."	builder := UITheme builder.		^ builder newToolbar: {				builder			newButtonFor: self "if we had a model it would go here"			getState: nil			action: #showPOUCode			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar POU.'.					builder			newButtonFor: self			getState: nil			action: #addPOUToLibrary			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addToLibrary.png')			help: 'Añadir POU a la Biblioteca.'.		}.! !!PLC_POU_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 14:09'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_POU_Editor methodsFor: 'view' stamp: 'EricPernia 11/18/2013 14:09'!clearView	"Elimina la Vista"	pouBodyView := nil.! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!borderColor		^ borderColor! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!borderColor: anObject		borderColor := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!color		^ color! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!color: anObject		color := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!keyboardFocusMorph		^ keyboardFocusMorph! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!keyboardFocusMorph: anObject		keyboardFocusMorph := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pou		^ pou! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pou: anObject		pou := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pouBodyEditor		^ pouBodyEditor! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pouBodyEditor: anObject		pouBodyEditor := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pouDeclsEditor		^ pouDeclsEditor! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!pouDeclsEditor: anObject		pouDeclsEditor := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!titleColor		^ titleColor! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!titleColor: anObject		titleColor := anObject! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!titleName		^ titleName! !!PLC_POU_Editor methodsFor: 'accessing' stamp: 'EricPernia 11/18/2013 14:13'!titleName: anObject		titleName := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_POU_Editor class	instanceVariableNames: ''!!PLC_POU_Editor class methodsFor: 'instance creation' stamp: 'EricPernia 11/18/2013 14:32'!newWithPOU: aPOU andColor: aColor andBorderColor: aBorderColor andTitleColor: aTitleColor andTitleName: aTitleName	"Nueva instancia con cierto modelo de pou y colores"	| pouEditor |		"pouDeclsEditor es un Controlador"		pouEditor := self new.		"Seteo su Modelo"	pouEditor pou: aPOU.		"Seteo los colores de su Vista"	pouEditor color: aColor.	pouEditor borderColor: aBorderColor.	pouEditor titleColor: aTitleColor.	"Seteo el titulo de la vista"	pouEditor titleName: aTitleName.		pouEditor pouBodyEditor: ( PLC_POU_Body_Editor 		newWithPOUBody: aPOU pouBody		andColor: ( Color r: 1 g: 1 b: 1 alpha: 0.5 )  		andBorderColor: Color black 		andTitleColor:  PLC_GraphicElementProperties uniqueInstance programHeaderColor 		andTitleName: 'Cuerpo de POU en lenguaje Ladder'		).		pouEditor pouDeclsEditor: ( PLC_POU_Declarations_Editor 		newWithPOUDeclarations: aPOU declarations		andColor: ( Color r: 1 g: 1 b: 1 alpha: 0.5 )  		andBorderColor: Color black 		andTitleColor:  PLC_GraphicElementProperties uniqueInstance programHeaderColor 		andTitleName: 'Declaraciones de Variables de POU'		).			^ pouEditor! !Object subclass: #PLC_EditorProgram	instanceVariableNames: 'window menubar toolbar projectTree instructions properties drawingArea'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_EditorProgram commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_EditorProgram is xxxxxxxxx.Instance Variables	drawingArea:		<Object>	instructions:		<Object>	menubar:		<Object>	projectTree:		<Object>	properties:		<Object>	toolbar:		<Object>	window:		<Object>drawingArea	- xxxxxinstructions	- xxxxxmenubar	- xxxxxprojectTree	- xxxxxproperties	- xxxxxtoolbar	- xxxxxwindow	- xxxxx!!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:50'!chooseColor	self drawingArea paintingColor: (self window chooseColor: self drawingArea paintingColor)! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:50'!draw	self window alert: 'Fool!! You are already painting. '! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:48'!drawingArea	^ drawingArea ifNil: [		drawingArea := PaintCanvas new]! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:51'!load	self window fileOpen: 'Seleccione un mapa de bits a cargar' extensions: #('png'  'jpg').	self window deny: 'It is only a demo, you cannot load bitmap yet'! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 05:23'!menubar	^ menubar ifNil: [ | menuProyecto menuConfiguracion |		menuProyecto := self window newMenu.		menuProyecto 			addToggle: 'Abrir'			target: self			selector: #load.		menuProyecto 			addToggle: 'Guardar'			target: self			selector: #save.		menuProyecto 			addToggle: 'Imprimir'			target: self			selector: #print.		menuConfiguracion := self window newMenu.		menuConfiguracion 			addToggle: 'Abrir'			target: self			selector: #load.		menuConfiguracion 			addToggle: 'Guardar'			target: self			selector: #save.		menuConfiguracion 			addToggle: 'Imprimir'			target: self			selector: #print.		menubar := self window newToolDockingBar.		menubar 			add: 'Proyecto'			font: self window theme menuBarFont			icon: nil			help: 'Operaciones de proyecto'			subMenu: menuProyecto.		menubar			add: 'Configuracion'			font: self window theme menuBarFont			icon: nil			help: 'Configuraciones'			subMenu: menuConfiguracion.		menubar		]! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:45'!messageSelecsave	self window fileSave: 'Select a bitmap to load' extensions: #('png'  'jpg').	self window deny: 'It is only a demo, you cannot save bitmap yet'! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 04:56'!save	self window fileSave: 'Escriba un nombre para la imagen a guardar' extensions: #('png'  'jpg').	self window deny: 'It is only a demo, you cannot save bitmap yet'! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 20:26'!toolbar	"^ toolbar ifNil: [ | tools |		tools := self window newToolbar: {			self window		}.		toolbar := self window newToolDockingBar addMorph: tools]"! !!PLC_EditorProgram methodsFor: 'varios' stamp: 'EricPernia 2/24/2012 20:21'!window 	^ window ifNil: [		window := StandardWindow labelled: 'PLeriC Project Manager'.		window announcer			on: WindowResizing 			do: [:ann | self drawingArea extent: ann newSize].		window]! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 2/29/2012 23:51'!initialize	self initialize1.	self initialize2.! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 2/29/2012 22:35'!initialize1	super initialize.	self installMenubar.	self installToolbar.	self installDrawingArea.	self window openInWorld.	self window  extent: 800@600.! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 4/24/2013 02:38'!initialize2		|win projectMenu tools dock text holder editMenu |	super initialize.		win := StandardWindow new.	projectMenu := win newMenu.	projectMenu		addToggle: 'Nuevo...ACAAAA'		target: self "would be model"		selector: #projectMenuNewProject.	projectMenu lastItem		font: win theme menuFont;		icon: win theme smallNewIcon;		keyText: 'Ctrl+N'.	projectMenu		addToggle: 'Abrir...' "'Open' translated"		target: self 		selector: #projectMenuOpenProject.	projectMenu lastItem		font: win theme menuFont;		icon: win theme smallOpenIcon;		keyText: 'Ctrl+O'.		projectMenu		addToggle: 'Guardar'		target: self		selector: #projectMenuSaveProject		getStateSelector: nil		enablementSelector: nil.	projectMenu lastItem		font: win theme menuFont;		icon: win theme smallSaveIcon;		keyText: 'Ctrl+S'.	projectMenu		addToggle: 'Guardar como...'		target: self		selector: #projectMenuSaveProjectAs		getStateSelector: nil		enablementSelector: nil.	projectMenu lastItem		font: win theme menuFont;		icon: win theme smallSaveAsIcon;		keyText: 'Ctrl+Mayus+S'.	projectMenu		addToggle: 'Imprimir...'		target: nil		selector: #projectMenuPrintProject.	projectMenu lastItem		font: win theme menuFont;		icon: win theme smallPrintIcon;		keyText: 'Ctrl+P'.	editMenu := win newMenu.	editMenu		addToggle: 'Cortar'		target: self 		selector: #editMenuCut.	editMenu lastItem		font: win theme menuFont;		icon: win theme smallCutIcon;		keyText: 'Ctrl+X'.			editMenu		addToggle: 'Copiar'		target: self 		selector: #editMenuCopy.	editMenu lastItem		font: win theme menuFont;		icon: win theme smallCopyIcon;		keyText: 'Ctrl+C'.	editMenu		addToggle: 'Pegar'		target: self 		selector: #editMenuPaste.	editMenu lastItem		font: win theme menuFont;		icon: win theme smallPasteIcon;		keyText: 'Ctrl+V'.	editMenu		addToggle: 'Borrar'		target: self 		selector: #editMenuDelete.	editMenu lastItem		font: win theme menuFont;		icon: win theme smallDeleteIcon;		keyText: 'Supr'.	editMenu		addToggle: 'Cambiar nombre'		target: self 		selector: #editMenuChangeName.	editMenu lastItem		font: win theme menuFont;		icon: nil;		keyText: 'F2'.			editMenu		addToggle: 'Compilar'		target: self 		selector: #editMenuCompile.	editMenu lastItem		font: win theme menuFont;		icon: win theme smallDoItIcon;		keyText: 'Ctrl+B'.	tools := win newToolbar: {		win			newButtonFor: nil "if we had a model it would go here"			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: win theme smallNewIcon			help: 'Nuevo'.		win			newButtonFor: nil			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: win theme smallOpenIcon			help: 'Abrir'.		win			newButtonFor: nil			getState: nil			action: #saveFile			arguments: nil			getEnabled: nil			labelForm: win theme smallSaveIcon			help: 'Guardar'.		win			newButtonFor: nil			getState: nil			action: #print			arguments: nil			getEnabled: nil			labelForm: win theme smallPrintIcon			help: 'Imprimir'}.		holder := StringHolder new.		text := win			newTextEditorFor: holder			getText:  #contents			setText: #contents:			getEnabled: nil.		dock := win newToolDockingBar.		dock			add: 'Proyecto' "'File' translated"			font: win theme menuBarFont			icon: nil "win theme smallOpenIcon"			help: 'Operaciones de proyecto' "'File operations' translated"			subMenu: projectMenu;			addMorphBack: tools;			add: 'Proyecto' "'File' translated"			font: win theme menuBarFont			icon: nil "win theme smallOpenIcon"			help: 'Operaciones de proyecto' "'File operations' translated"			subMenu: projectMenu;			addMorphBack: tools;						add: 'Proyecto' "'File' translated"			font: win theme menuBarFont			icon: nil "win theme smallOpenIcon"			help: 'Operaciones de proyecto' "'File operations' translated"			subMenu: projectMenu;			addMorphBack: tools;						add: 'Edición'			font: win theme menuBarFont			icon: nil			help: 'Operaciones de proyecto'			subMenu: editMenu;			addMorphBack: tools.					win			addMorph: dock			fullFrame: (LayoutFrame fractions: (0@0 corner: 1@0) offsets: (0@0 corner: 0 @ dock minExtent y));			addMorph: text			fullFrame: (LayoutFrame fractions: (0@0 corner: 1@1) offsets: (0@dock minExtent y corner: 0 @ 0)).		win			themeChanged;			openInWorld.! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 2/24/2012 20:26'!installDrawingArea	self window 		addMorph: self drawingArea		fullFrame: (			LayoutFrame				fractions: (0@0 corner: 1@1)				offsets: (0@(self menubar minExtent y "+ self toolbar minExtent y") corner:  0@0)).	self drawingArea color: Color red! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 2/24/2012 04:25'!installMenubar	self window 		addMorph: self menubar		fullFrame: (			LayoutFrame				fractions: (0@0 corner: 1@0)				offsets: (0@0 corner:  0@ self menubar minExtent y))! !!PLC_EditorProgram methodsFor: 'initialize-release' stamp: 'EricPernia 2/24/2012 05:14'!installToolbar| buttonPanel |buttonPanel := PluggablePanelMorph new.self window addMorph: buttonPanel fullFrame: (     LayoutFrame        fractions: (0@0.99 corner: 1@1)        offsets: (0@50 negated corner: 0@0)).buttonPanel  color: (Color gray).#(uno dos tres) do: [:label| |aButton|    aButton := PluggableButtonMorph new label: label; yourself.   buttonPanel addMorph: aButton fullFrame: nil.].	"self window 		addMorph: self toolbar		fullFrame: (			LayoutFrame				fractions: (0@0 corner: 1@0)				offsets: (0@self menubar minExtent y corner:  0@ self menubar minExtent y + self toolbar minExtent y))"! !Object subclass: #PLC_ListSelector	instanceVariableNames: 'view borderColor color library target targetMessage'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_ListSelector commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_ListSelector is xxxxxxxxx.Instance Variables	borderColor:		<Object>	color:		<Object>	library:		<Object>	target:		<Object>	targetMessage:		<Object>	view:		<Object>borderColor	- xxxxxcolor	- xxxxxlibrary	- xxxxxtarget	- xxxxxtargetMessage	- xxxxxview	- xxxxx!!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:19'!buildView	"build and remenber my internal view"	| builder listinha botoncito botoncito2 | 	builder := UITheme builder.	view := BorderedMorph new.	view 		borderWidth: 2;		position: 100@300;		color: self color;		borderColor: self borderColor."list : (PLC_Function StdFunctions keys asArray))"	listinha := builder 			newListFor: (ListModel new list: self library keys asArray)			list: #list			selected: #selectionIndex			changeSelected: #selectionIndex:			getEnabled: nil			help: 'Elegir el elemento a insetar'.	listinha 		position: (view position+(5@5));		name: 'functionList';		height: 200;		width: 180.	botoncito := builder			newButtonFor: self 			action: #processFunctionSelection			label: 'Agregar' 			help: 'Agregar el elemento elegido al segmento.'.	botoncito 		position: (view position + (13@listinha height + 20));		setNameTo: #selectButton.	" (48@listinha height + 20));"	botoncito2 := builder			newButtonFor: self 			action: #cancel			label: 'Cancelar' 			help: 'Cierra el selector.'.	botoncito2 		position: (view position + (78@listinha height + 20));		setNameTo: #selectButton.	view extent: ((listinha width + 10)@(listinha height + botoncito height + 30)).	view addMorphBack: listinha.	view addMorphBack: botoncito.	view addMorphBack: botoncito2.! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:02'!cancel	"Cierra la ventana"	self view delete.! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:02'!clearView	"Elimina la Vista"	view := nil.! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:02'!functionListPanel	"the morph rendering the function list"	^self view submorphs detect: [ :morph | morph externalName = 'functionList' ].! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:02'!openAt: somePosition	"my view"	self functionListPanel model selectionIndex: 1.	self view 		position: somePosition;		openInWorld.	self functionListPanel takeKeyboardFocus.! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 05:52'!processFunctionSelection	"process the fac that the user has made a selection on the function list"	self selectedFunction 		ifNil: [ 			UITheme builder message: 'Debe elegir algun elemento.' 			]		ifNotNil: [ 			"UITheme builder message: 				('El elemento seleccionado es ', self selectedFunction cPOUName , '.' ).				  self view delete. "							"Target es el objeto al que le mando el resultado de la seleccion en el 			list, por ejemplo, un ladderView que le mando una funcion elegida para 			que se inserte"				self target 				perform: self targetMessage 				with: self selectedFunction.							self cancel.			]! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:14'!selectedFunction	"the function currently selected, an instance of PLC_Function"	^self functionListPanel model selectedItem		ifNil: [ nil ]		ifNotNil: [ self library at: (self functionListPanel model selectedItem) ]! !!PLC_ListSelector methodsFor: 'list' stamp: 'EricPernia 11/17/2013 02:02'!view	"my view"	view ifNil: [ self buildView ].	^view! !!PLC_ListSelector methodsFor: 'initialize-release' stamp: 'EricPernia 11/17/2013 02:04'!initialize	"Inicializa"	"view := nil."! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!borderColor		^ borderColor! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!borderColor: anObject		borderColor := anObject! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!color		^ color! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!color: anObject		color := anObject! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!library		^ library! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!library: anObject		library := anObject! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 05:40'!target	"Aca guarda el objeto destino a quien tiene que devolverle el item seleccionado"		^ target! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 05:39'!target: anObject		target := anObject! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 05:41'!targetMessage	"Aca guarda el lemsaje que le tiene que mandar objeto destino a quien tiene que devolverle el item seleccionado"		^ targetMessage! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 05:39'!targetMessage: anObject		targetMessage := anObject! !!PLC_ListSelector methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 02:02'!view: anObject		view := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_ListSelector class	instanceVariableNames: ''!!PLC_ListSelector class methodsFor: 'example' stamp: 'EricPernia 11/17/2013 02:02'!example	"an example"	| selector |	selector := self new.	selector openAt: 100@200.		^ selector.		"Con estas dos lineas abris una ventanita para elegir la funcion. Ya se, esta muy feo, 	 fijate si te sale rapido ponerlo mas bonito, si no ya fue"		"En el metodo buildView tenes los detalles de que Morph son: fijate que es un morph externo que incluye	 dos morphs internos. Las posiciones de los internos estan puestas a mano respecto del de afuera.	  Fijate que poniendole la posicion al morph de afuera, los de adentro se acomodan solitos.	 Tal vez haya algo mas cheto, pero yo no lo conozco."		"fijate en el metodo processFunctionSelection, ahi tenes que reemplazar el mensaje 	  por lo que tengas que hacer para agregar una funcion en el segmento actual.	  El metodo selectedFunction devuelve la instancia de PLC_Function correspondiente 	a la funcion elegida"! !!PLC_ListSelector class methodsFor: 'instance creation' stamp: 'EricPernia 11/17/2013 02:08'!newWithLibrary: aDictionary	"Nueva instancia con cierta biblioteca"	| listSelector |		listSelector := self new.		listSelector borderColor: Color green.	listSelector color: Color green twiceLighter.		listSelector library: aDictionary.			listSelector openAt: 100@200.			^ listSelector! !!PLC_ListSelector class methodsFor: 'instance creation' stamp: 'EricPernia 11/17/2013 04:07'!newWithLibrary: aDictionary andColor: aColor andBorderColor: aBorderColor	"Nueva instancia con cierta biblioteca"	| listSelector |		listSelector := self new.		listSelector color: aColor.	listSelector borderColor: aBorderColor.		listSelector library: aDictionary.		^ listSelector! !PLC_DesktopIcon subclass: #PLC_ImageSuicide	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_ImageSuicide commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_ImageSuicide is xxxxxxxxx.Instance Variables!!PLC_ImageSuicide methodsFor: 'as yet unclassified' stamp: 'EricPernia 11/19/2013 16:56'!handlesMouseOver: anEvent	"Permite manejar el evento de que el puntero pasa sobre el morph."	^false.! !!PLC_ImageSuicide methodsFor: 'as yet unclassified' stamp: 'EricPernia 11/19/2013 16:51'!leftClick: anEvent	"Manejador del evento Click con boton izquiedo del mouse"	"(click) sent when the mouse button goes up within doubleClickTime."			self delete! !Object subclass: #PLC_POU_Editor_Backup	instanceVariableNames: 'keyboardFocusNetwork selectedVariableIndex'	classVariableNames: ''	poolDictionaries: ''	category: 'IDE4PLC-GUI'!!PLC_POU_Editor_Backup commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.------------------------------------------------------------------A PLC_POU_Editor_Backup is xxxxxxxxx.Instance Variables	keyboardFocusNetwork:		<Object>	selectedVariableIndex:		<Object>keyboardFocusNetwork	- xxxxxselectedVariableIndex	- xxxxx!!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!globalVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!globalVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self globalVarsMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!globalVarsMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@30.	globalVarsMorph backgroundColor: Color black twiceLighter.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: 1.	globalVarsMorph text: 'Globales'. "Declaraciones de variables globales"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!locatedMorph	"devuelve un PLC_TitleMorph"	| addressMorph |	addressMorph := PLC_TitleMorph new.	addressMorph extent: 90@25.	addressMorph backgroundColor: Color black twiceLighter lighter.	addressMorph backgroundBorderWidth: 1.	addressMorph emphasis: 1.	addressMorph text: 'Ubicación'.	addressMorph changed.		^ addressMorph.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!locatedVarLists	"Genera la fila"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varAddress			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Ubicación de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!locatedVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self locatedVarsMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!locatedVarTitles	"Genera la fila"	| row |	row := self builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self locatedMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!locatedVarsMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@30.	globalVarsMorph backgroundColor: Color black twiceLighter.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: 1.	globalVarsMorph text: 'Ubicadas'. "Declaraciones de variables ubicadas 	Variables representadas directamente"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'PARA EDITOR DE RESOURCE' stamp: 'EricPernia 11/17/2013 16:41'!varAddress		| col |	col := OrderedCollection new.		col add: '%I0.0'.	col add: ''.	col add: ''.	col add: ''.		^ col.! !!PLC_POU_Editor_Backup methodsFor: 'il editor' stamp: 'EricPernia 11/17/2013 16:41'!ilPouBodyEditor	"Devuelve la columna con el editor de lenguaje IL"		"HACER"! !!PLC_POU_Editor_Backup methodsFor: 'open/close' stamp: 'EricPernia 11/17/2013 16:41'!builder	"Devuelve el builder"	^ UITheme builder.! !!PLC_POU_Editor_Backup methodsFor: 'open/close' stamp: 'EricPernia 11/17/2013 16:41'!imageFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ self proyectFilesPath , 'imagenes/'."	^ ''.! !!PLC_POU_Editor_Backup methodsFor: 'open/close' stamp: 'EricPernia 11/17/2013 16:41'!open	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window windowExtent aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Unidad de Organización de Programa (POU)' ) model: nil.		"Agrego el editor de variables"	window addMorph: self pouVarDeclEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	window addMorph: self ladderPouBodyEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_POU_Editor_Backup methodsFor: 'open/close' stamp: 'EricPernia 1/29/2014 23:48'!projectFilesPath	"Devuelve el string de la ruta de los archivos del proyecto"	"^ 'D:/Proyecto/Pharo-1.3-13315-OneClick.app/Contents/Resources/PLeriC'."	^ ''.! !!PLC_POU_Editor_Backup methodsFor: 'fbd editor' stamp: 'EricPernia 11/17/2013 16:41'!fbdPouBodyEditor	"Devuelve la columna con el editor de lenguaje FBD"		"HACER"! !!PLC_POU_Editor_Backup methodsFor: 'ladder editor' stamp: 'EricPernia 11/17/2013 16:41'!ladderPouBodyEditor	"Devuelve la columna con el editor de lenguaje Ladder"		| ladderPouBodyEditor controller ladderView scroller expander |	controller := PLC_LadderController newWithModel: nil.		ladderView := controller openLadderView.	self keyboardFocusNetwork: ladderView.			scroller := ( self builder newScrollPaneFor: ladderView ) 		hResizing: #spaceFill; 		vResizing: #spaceFill.	expander := ( self builder newExpander: 'Segmento 1'  for: scroller ) 		spaceFillWeight: 1; 		expanded: true.	ladderPouBodyEditor := self builder newColumn: {   		self ladderPouBodyMorph.		self ladderToolbar.		expander.	}.	"hResizing: #spaceFill;	vResizing: #shrinkWrap;	cellSpacing: 10"			ladderPouBodyEditor 		cellInset: 0";		extent: 720 @ 450".							^ ladderPouBodyEditor.					! !!PLC_POU_Editor_Backup methodsFor: 'ladder editor' stamp: 'EricPernia 11/17/2013 16:41'!ladderPouBodyMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: PLC_GraphicElementProperties uniqueInstance programHeaderColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: 'Cuerpo de POU en lenguaje Ladder'.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Editor_Backup methodsFor: 'ladder editor' stamp: 'EricPernia 11/17/2013 16:41'!ladderToolbar 	"Devuelve la barra de herramientas superior de la ventana de edición de Ladder"		| builder |		"^PLC_LadderToolBarMorph new."	builder := UITheme builder.		^ builder newToolbar: {		"		builder			newButtonFor: self keyboardFocusNetwork ""if we had a model it would go here""			getState: nil			action: #drawGroups			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addNetwork.png')			help: 'Añadir Segmento.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #dfdff			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeNetwork.png')			help: 'Remover Segmento seleccionado.'.		"								"builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #ilExport			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'ilExport.png')			help: 'Exportar Configuracion en IL.'."					builder			newButtonFor: self keyboardFocusNetwork "if we had a model it would go here"			getState: nil			action: #compile			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'compile.png')			help: 'Compilar.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #bootLPCLink			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'bootLPCLink.png')			help: 'Conectarse al PLC.'.						builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #downloadProgram			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'downloadProgram.png')			help: 'Descargar Programa al PLC.'.																	builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyCPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addContact.png') 			help: 'Añadir Contacto.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyBPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addCoil.png') 			help: 'Añadir Bobina.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyOPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'openBranch.png') 			help: 'Abrir Rama.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #keyPPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'closeBranch.png') 			help: 'Cerrar Rama.'.								builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyFPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunction.png') 			help: 'Añadir llamado a Función.'.					builder			newButtonFor: self keyboardFocusNetwork 			getState: nil			action: #keyGPressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addFunctionBlock.png') 			help: 'Añadir llamado a Bloque de Función.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #generateCode			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'addProgramControl.png') 			help: 'Añadir componente de Control de Ejecución.'.					builder			newButtonFor: self keyboardFocusNetwork			getState: nil			action: #keyDeletePressed			arguments: nil			getEnabled: nil			labelForm: (Form fromFileNamed: self imageFilesPath , 'removeSelected.png') 			help: 'Remover componente(s) seleccionado(s).'.											"		builder			newButtonFor: nil ""if we had a model it would go here""			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallNewIcon			help: 'Nuevo'.		builder			newButtonFor: nil			getState: nil			action: #openFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallOpenIcon			help: 'Abrir'.		builder			newButtonFor: nil			getState: nil			action: #saveFile			arguments: nil			getEnabled: nil			labelForm: builder theme smallSaveIcon			help: 'Guardar'.		builder			newButtonFor: nil			getState: nil			action: #print			arguments: nil			getEnabled: nil			labelForm: builder theme smallPrintIcon			help: 'Imprimir' 		" 	}.! !!PLC_POU_Editor_Backup methodsFor: 'add-remove' stamp: 'EricPernia 11/17/2013 16:41'!addNetwork	"Añade un nuevo segmento a la ventana"		^ 'Se agrego segmento.'! !!PLC_POU_Editor_Backup methodsFor: 'Eric' stamp: 'EricPernia 11/17/2013 16:41'!openEric	"Abre la ventana"	| content |				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		content := self builder newColumn: {		self varMenu. 				self globalVarTitle.		self varTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.	content cellInset: 0.		"hResizing: #spaceFill;		vResizing: #spaceFill;		cellSpacing: 10."	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		 (content openInWindowLabeled: 'Contactos') 		extent: 800@600.! !!PLC_POU_Editor_Backup methodsFor: 'Eric' stamp: 'EricPernia 11/17/2013 16:41'!openEric2	"Abre la ventana"	|builder content variablesRow menu varTitles1 varTitles2 |	builder := UITheme builder.		menu := builder newRow: {		builder newButtonFor: self 			action: #addButtonClick 			label: 'Añadir' 			help: 'Crear un contacto nuevo'.						builder newButtonFor: self 			action: #removeButtonClick 					label: 'Remover' 			help: 'Remover contacto selecccionado'.		builder newButtonFor: self 			action: #editButtonClick 					label: 'Editar' 			help: 'Editar contacto selecccionado' 		}.			varTitles1 := builder newRow: {		(self globalVarsMorph)			hResizing: #spaceFill.		}.			varTitles2 := builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.				variablesRow := builder newRow: {		(builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		(builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		(builder 			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"			varTitles1 cellInset: 0.		varTitles2 cellInset: 0.		variablesRow cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"	content := builder newColumn: {		menu.		varTitles1.		varTitles2.		variablesRow.	}.	content cellInset: 0.		"hResizing: #spaceFill;		vResizing: #spaceFill;		cellSpacing: 10."	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		 (content openInWindowLabeled: 'Contactos') 		extent: 800@600.! !!PLC_POU_Editor_Backup methodsFor: 'Eric' stamp: 'EricPernia 11/17/2013 16:41'!openEric3	"Abre la ventana"	| window windowExtent aWorld varDeclsContainer varDecls pouBody pouBodyContainer |				"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		varDecls := self builder newColumn: {		self varMenu. 				self globalVarTitle.		self varTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.	varDecls cellInset: 0;		minHeight: 10";		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10".	"(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."		"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."	varDeclsContainer := varDecls.		pouBody := Morph new.	pouBodyContainer := pouBody.	"Creo la ventana y agrego los controles"	window := ( SystemWindow labelled: 'Ventana' ) model: nil.			window addMorph: varDeclsContainer fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	window addMorph: pouBodyContainer fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					"window updatePaneColors."	window extent: 800@600.		aWorld := Morph new currentWorld.		aWorld addMorph: window.	window activate.	aWorld startSteppingSubmorphsOf: window.	^ window.! !!PLC_POU_Editor_Backup methodsFor: 'Eric' stamp: 'EricPernia 11/17/2013 16:41'!openEric4	"Abre la ventana del  Editor. Para esto creo la ventana y agrego los controles"	| window windowExtent aWorld   |	"Creo la ventana"	window := ( SystemWindow labelled: 'Editor de Unidad de Organización de Programa (POU)' ) model: nil.		"Agrego el editor de variables"	window addMorph: self pouVarDeclEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0 corner: 1@0.4 )			offsets: ( 0@0 corner: 1@0 )		).	"Agrego el editor de ladder"	window addMorph: self ladderPouBodyEditor fullFrame: (		LayoutFrame 			fractions: ( 0@0.4 corner: 1@1 )			offsets: ( 0@0 corner: 1@0 )		).					window updatePaneColors.	window extent: 800@600.		aWorld := Morph new currentWorld.	aWorld addMorph: window.		window activate.		aWorld startSteppingSubmorphsOf: window.	^ window.		"(builder newLabel: 'Nombre')			hResizing: #spaceFill;			vResizing: #spaceFill;			color: Color white; 			minHeight: 50;			minWidth: 200.	"		" VAR DECLS ES UNA COLUMNA		varDecls := self builder newColumn: {		self variableToolBar. 				self globalVarTitle.		self globalVarTitles.		self globalVarLists. 				self locatedVarTitle.		self locatedVarTitles.		self locatedVarLists.	}.		varDecls cellInset: 0;		minHeight: 10;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		cellSpacing: 10	(builder newPluggableDialogWindow: 'Titulo' for: content)		extent: 800@600; 		 openInWorld."	"(varDecls openInWindowLabeled: 'Contactos') 		extent: 800@600."		"varDeclsContainer := PluggablePanelMorph new.	varDeclsContainer addMorph: varDecls."! !!PLC_POU_Editor_Backup methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 16:41'!keyboardFocusNetwork	^ keyboardFocusNetwork! !!PLC_POU_Editor_Backup methodsFor: 'accessing' stamp: 'EricPernia 11/17/2013 16:41'!keyboardFocusNetwork: anObject	keyboardFocusNetwork := anObject! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!descriptionMorph	"devuelve un PLC_TitleMorph"	| descriptionMorph |	descriptionMorph := PLC_TitleMorph new.	descriptionMorph extent: 400@20.	descriptionMorph backgroundColor: self varTitlesColor.	descriptionMorph backgroundBorderWidth: 1.	descriptionMorph emphasis: self varTitleEmphasis.	descriptionMorph text: 'Descripción'.	descriptionMorph changed.		^ descriptionMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!inOutVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Entrada-Salida'. "Declaraciones de variables de Entrada-Salida"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!inOutVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self inOutVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!inputVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Entrada'. "Declaraciones de variables de Entrada"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!inputVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self inputVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!nameMorph	"devuelve un PLC_TitleMorph"	| nameMorph |	nameMorph := PLC_TitleMorph new.	nameMorph extent: 200@20.	nameMorph backgroundColor: self varTitlesColor.	nameMorph backgroundBorderWidth: 1.	nameMorph emphasis: self varTitlesEmphasis.	nameMorph text: 'Nombre'.	nameMorph changed.		^ nameMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!outputVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Salida'. "Declaraciones de variables de Salida"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!outputVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self outputVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!pouVarMorph	"devuelve un PLC_TitleMorph"	| titleMorph |	titleMorph := PLC_TitleMorph new.	titleMorph extent: 780@30.	titleMorph backgroundColor: PLC_GraphicElementProperties uniqueInstance programHeaderColor.	titleMorph backgroundBorderWidth: 1.	titleMorph leftMargin: 10.	titleMorph emphasis: 1.	titleMorph text: 'Declaraciones de variables de POU'.	titleMorph leftAlign.	titleMorph changed.		^ titleMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!pouVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self pouVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!tempVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Temporales'. "Declaraciones de variables Temporales"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!tempVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self tempVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!typeMorph	"devuelve un PLC_TitleMorph"	| typeMorph |	typeMorph := PLC_TitleMorph new.	typeMorph extent: 90@20.	typeMorph backgroundColor: self varTitlesColor.	typeMorph backgroundBorderWidth: 1.	typeMorph emphasis: self varTitlesEmphasis.	typeMorph text: 'Tipo'.	typeMorph changed.		^ typeMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!varTitles	"Genera la fila"	| row |	row := self builder newRow: {		(self nameMorph)			hResizing: #spaceFill;			minWidth: 200.		(self typeMorph)			hResizing: #spaceFill;			minWidth: 90.		(self descriptionMorph)			hResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!varVarMorph	"devuelve un PLC_TitleMorph"	| globalVarsMorph |	globalVarsMorph := PLC_TitleMorph new.	globalVarsMorph extent: 780@25.	globalVarsMorph backgroundColor: self varTitleColor.	globalVarsMorph backgroundBorderWidth: 1.	globalVarsMorph emphasis: self varTitleEmphasis.	globalVarsMorph text: 'Internas'. "Declaraciones de variables Internas"	globalVarsMorph changed.		^ globalVarsMorph.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - titles' stamp: 'EricPernia 11/17/2013 16:41'!varVarTitle	"Genera la fila"		| row |	row := self builder newRow: {		(self varVarMorph)			hResizing: #spaceFill.		}.			row cellInset: 0.		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!interfaceVarsColumn	"Devuelve la columna con el editor de lenguaje Ladder"		| interfaceVarsColumn |		interfaceVarsColumn := self builder newColumn: { 		self varTitles.				self inputVarTitle.		self inputVarLists. 						self outputVarTitle.		self outputVarLists. 						self inOutVarTitle.		self inOutVarLists. 		}.		interfaceVarsColumn cellInset: 0;		extent: 720 @ 20.			^ interfaceVarsColumn.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!internalVarsColumn	"Devuelve la columna con el editor de lenguaje Ladder"	| internalVarsColumn |		internalVarsColumn := self builder newColumn: { 				self varTitles.				self varVarTitle.		self varVarLists. 				self tempVarTitle.		self tempVarLists. 		}.		internalVarsColumn cellInset: 0;		extent: 720 @ 20.			^ internalVarsColumn.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!pouVarDeclEditor	"Devuelve la columna con el editor de lenguaje Ladder"		| pouVarDeclEditor exp1 exp2 eg1 |			"scroller := ( self builder newScrollPaneFor: ladderView ) 		hResizing: #spaceFill; 		vResizing: #spaceFill."	"morph1 := (PanelMorph new fillStyle: (SolidFillStyle color: Color red))		hResizing: #spaceFill;		vResizing: #spaceFill."			exp1 := ( self builder newExpander: 'Variables de interfaz' for: self interfaceVarsColumn )		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: true.		eg1 := EdgeGripMorph new		target: exp1;		edgeName: #bottom;		vResizing: #rigid;		extent: 24 @ 1;		on: #mouseDown send: #expandedSizingRigid to: exp1.		exp2 := ( self builder newExpander: 'Variables internas'  for: self internalVarsColumn )		spaceFillWeight: ProportionalSplitterMorph splitterWidth;		expanded: false.		pouVarDeclEditor := self builder 		newColumn: { 			self pouVarTitle.			self variableToolBar.			exp1. 			eg1. 			exp2.			}.		pouVarDeclEditor cellInset: 0;		extent: 720 @ 20.			^ pouVarDeclEditor.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!varDescription		| col |	col := OrderedCollection new.		col add: 'Variable 1, representa el cambio en la corriente nominal.'.	col add: 'Variable 2, representa el cambio en la corriente nominal.'.	col add: 'Variable 3, representa el cambio en la corriente nominal.'.	col add: 'Variable 4, representa el cambio en la corriente nominal.'.		^ col.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!varInitialValue		| col |	col := OrderedCollection new.		col add: '0'.	col add: '1'.	col add: '15'.	col add: '50'.		^ col.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!varName		| col |	col := OrderedCollection new.		col add: 'variable1'.	col add: 'var_2_laaaaarga'.	col add: 'var3'.	col add: 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'.	^ col.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!varType		| col |	col := OrderedCollection new.		col add: 'Bool'.	col add: 'Bool'.	col add: 'Int'.	col add: 'Int'.		^ col.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor' stamp: 'EricPernia 11/17/2013 16:41'!variableToolBar	"Genera la fila"	^ self builder newRow: {		self builder newButtonFor: self 			action: #addButtonClick 			label: 'Añadir Variable' 			help: 'Abre el dialogo para añadir una variable.'.						self builder newButtonFor: self 			action: #removeButtonClick 					label: 'Remover Variable' 			help: 'Remueve la Variable seleccionada.'.		self builder newButtonFor: self 			action: #editButtonClick 					label: 'Editar Variable' 			help: 'Abre el dialogo para editar la Variable seleccionada.'.			}.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - events' stamp: 'EricPernia 11/17/2013 16:41'!hasSelectedVariable	^selectedVariableIndex > 0! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - events' stamp: 'EricPernia 11/17/2013 16:41'!variableSelectedIndex	^ selectedVariableIndex ifNil: [selectedVariableIndex := 0]! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - events' stamp: 'EricPernia 11/17/2013 16:41'!variableSelectedIndex: aSmallInteger 	selectedVariableIndex := aSmallInteger.	self 		changed: #variableSelectedIndex;  		changed: #hasSelectedVariable		! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/17/2013 16:41'!inOutVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/17/2013 16:41'!inputVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/17/2013 16:41'!outputVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/17/2013 16:41'!tempVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - lists' stamp: 'EricPernia 11/17/2013 16:41'!varVarLists	"Genera la fila de Lists de variables"	| row |	row := self builder newRow: {		( self builder 			newListFor: self   			list: #varName			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Nombre de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 200.		( self builder 			newListFor: self   			list: #varType			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Tipo de datos de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 90.		( self builder			newListFor: self   			list: #varDescription			selected: #variableSelectedIndex			changeSelected: #variableSelectedIndex:			help: 'Descripción de la Variable')			hResizing: #spaceFill;			vResizing: #spaceFill;			minWidth: 400.		}.			row cellInset: 0;		hResizing: #spaceFill;		vResizing: #spaceFill.		"shrinkWrap"		^ row.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 16:41'!varTitleColor	"Genera la fila"		^ Color gray.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 16:41'!varTitleEmphasis	""		^ 0.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 16:41'!varTitlesColor	"Color"		^ PLC_GraphicElementProperties uniqueInstance rowColorHeader.! !!PLC_POU_Editor_Backup methodsFor: 'variable editor - style' stamp: 'EricPernia 11/17/2013 16:41'!varTitlesEmphasis	""		^ 1.! !