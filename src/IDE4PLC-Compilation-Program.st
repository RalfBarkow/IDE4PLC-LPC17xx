"Copyright © 2012-2014 Eric Nicolás Pernia.This file is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>."Object subclass: #PLC_ClassWithIdentifier	instanceVariableNames: 'identifier'	classVariableNames: 'invalidIdentifiers repeatableIdentifiers'	poolDictionaries: ''	category: 'IDE4PLC-Compilation-Program'!!PLC_ClassWithIdentifier commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.A PLC_ClassWithIdentifier is xxxxxxxxx.Instance Variables	identifier:		<Object>identifier	- xxxxx!!PLC_ClassWithIdentifier methodsFor: 'accessing' stamp: 'EricPernia 5/31/2013 00:23'!identifier	identifier		ifNil: [			^ 'Insertar_Identificador'			] 		ifNotNil: [			^ identifier.			].! !!PLC_ClassWithIdentifier methodsFor: 'accessing' stamp: 'EricPernia 5/10/2013 14:46'!identifier: aString	| oldIdentifier |	identifier := aString.	"oldIdentifier := self identifier."		"Chequeo que no sea un identificador repetido."	"( self class invalidIdentifiers includes: aString )		ifTrue: [			self error: 'Identificador utilizado, elija otro.'			] 		ifFalse: ["						"Valido el identificador"			"identifier := ( PLC_Identifier validatePLCIdentifier: aString )."				"Aca toco la clase. Ver si está bien."			"( oldIdentifier =  'Isertar_Identificador' )				ifFalse: [					self class invalidIdentifiers remove: oldIdentifier. 					]. ""Remuevo el viejo identificador de los identificadores ya utilizados"						"(self class repeatableIdentifiers includes: aString )				ifFalse: [					self class invalidIdentifiers add: aString."" Añado el nuevo identificador de los identificadores ya utilizados"				"	].			]."	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_ClassWithIdentifier class	instanceVariableNames: ''!!PLC_ClassWithIdentifier class methodsFor: 'class initialization' stamp: 'EricPernia 11/9/2012 16:17'!initialize	"inicializacion de la clase"	self invalidIdentifiers: OrderedCollection new.	self invalidIdentifiers add: 'Isertar_Identificador'.		self repeatableIdentifiers: OrderedCollection new.		self repeatableIdentifiers add: 'EN'.	self repeatableIdentifiers add: 'ENO'.		self repeatableIdentifiers add: 'IN'.	self repeatableIdentifiers add: 'IN0'.	self repeatableIdentifiers add: 'IN1'.	self repeatableIdentifiers add: 'IN2'.	self repeatableIdentifiers add: 'IN3'.	self repeatableIdentifiers add: 'IN4'.	self repeatableIdentifiers add: 'IN5'.		self repeatableIdentifiers add: 'OUT'.	self repeatableIdentifiers add: 'OUT0'.	self repeatableIdentifiers add: 'OUT1'.	self repeatableIdentifiers add: 'OUT2'.	self repeatableIdentifiers add: 'OUT3'.	self repeatableIdentifiers add: 'OUT4'.	self repeatableIdentifiers add: 'OUT5'.		self repeatableIdentifiers add: 'RetVal'.	self repeatableIdentifiers add: 'N'.	self repeatableIdentifiers add: 'G'.	self repeatableIdentifiers add: 'K'.	self repeatableIdentifiers add: 'MN'.	self repeatableIdentifiers add: 'MX'.		self repeatableIdentifiers add: 'Q'.	self repeatableIdentifiers add: 'Q1'.	self repeatableIdentifiers add: 'QU'.	self repeatableIdentifiers add: 'QD'.	self repeatableIdentifiers add: 'S'.	self repeatableIdentifiers add: 'S1'.	self repeatableIdentifiers add: 'R'.	self repeatableIdentifiers add: 'R1'.	self repeatableIdentifiers add: 'LD'.	self repeatableIdentifiers add: 'CLK'.	self repeatableIdentifiers add: 'CU'.	self repeatableIdentifiers add: 'CD'.	self repeatableIdentifiers add: 'CV'.	self repeatableIdentifiers add: 'PV'.	self repeatableIdentifiers add: 'PT'.	self repeatableIdentifiers add: 'ET'.				! !!PLC_ClassWithIdentifier class methodsFor: 'instance creation' stamp: 'EricPernia 10/31/2012 02:32'!newWithName: aString	"Crea una nueva instancia con el nombre aString"	| temp |		temp := self new.	temp identfier: aString.		self invalidIdentifiers add: aString.		^ temp.! !!PLC_ClassWithIdentifier class methodsFor: 'accessing' stamp: 'EricPernia 10/31/2012 02:31'!invalidIdentifiers	^ invalidIdentifiers! !!PLC_ClassWithIdentifier class methodsFor: 'accessing' stamp: 'EricPernia 10/31/2012 02:31'!invalidIdentifiers: anObject	invalidIdentifiers := anObject! !!PLC_ClassWithIdentifier class methodsFor: 'accessing' stamp: 'EricPernia 11/9/2012 15:36'!repeatableIdentifiers	^ repeatableIdentifiers! !!PLC_ClassWithIdentifier class methodsFor: 'accessing' stamp: 'EricPernia 11/9/2012 15:37'!repeatableIdentifiers: anObject	repeatableIdentifiers := anObject! !Object subclass: #PLC_CompilerAndWriter	instanceVariableNames: 'fileSystem'	classVariableNames: 'Instance'	poolDictionaries: ''	category: 'IDE4PLC-Compilation-Program'!!PLC_CompilerAndWriter commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.A PLC_CompilerAndWriter is xxxxxxxxx.Instance Variables	fileSystem:		<Object>fileSystem	- xxxxx!!PLC_CompilerAndWriter methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:15'!fileSystem		^ fileSystem! !!PLC_CompilerAndWriter methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:15'!fileSystem: anObject		fileSystem := anObject! !!PLC_CompilerAndWriter methodsFor: 'initialize-release' stamp: 'EricPernia 5/15/2014 02:43'!initialize 	"Inicializo la instancia de Compilador y Grabador"		fileSystem := PLC_FileSystem uniqueInstance.! !!PLC_CompilerAndWriter methodsFor: 'download' stamp: 'EricPernia 5/17/2014 20:45'!bootLPCLink	"Bootea el LPC Link. So lo hay que hacerlo una vez"	"OSProcess command: 'C:\IDE4PLC.app\Contents\Resources\IDE4PLC_BAT\LPC_Link_Boot.bat'."! !!PLC_CompilerAndWriter methodsFor: 'download' stamp: 'EricPernia 5/17/2014 20:46'!downloadSoftwareConfig	"Descarga el programa en el PLC (flasheo)"	"Programa el ejecutable en la Flash del microcontrolador"	"OSProcess command: 'C:\IDE4PLC.app\Contents\Resources\IDE4PLC_BAT\Flash_Programming.bat'."! !!PLC_CompilerAndWriter methodsFor: 'compile' stamp: 'EricPernia 5/17/2014 20:45'!buildCProject	"Hace el build del Proyecto en C que tiene el Programa Completo de usuario 	(Configuración de Software implementada en C) + Entorno de Ejecución."	"Inicicaliza la direccion de la ruta de instalacion del LPCXpressoIDE"	"OSProcess command: self fileSystem batFilesPath , '1.bat'."	"Ejecuta el Build de los archivos .C y .H de los Proyectos de Eclipse 	PLeriC_Project (ejecutable) y PLeriC (biblioteca estática)"	OSProcess command: 'C:\IDE4PLC.app\Contents\Resources\IDE4PLC_BAT\Build_C_Project.bat'.! !!PLC_CompilerAndWriter methodsFor: 'compile' stamp: 'EricPernia 5/17/2014 02:01'!cCompile: aSoftConfig	"Crea los archivos y hace el build del Proyecto en C que tiene el Programa Completo de usuario 	(Configuración de Software implementada en C) + Entorno de Ejecución."	"Crea los archivos .C y .H"	self createCProjectFor: aSoftConfig.	"Build de los archivos .C y .H"	"self buildCProject.	"			"LO COMENTO PARA QUE NO ME HAGA BUILD MIENTRAS PRUEBO"! !!PLC_CompilerAndWriter methodsFor: 'compile' stamp: 'EricPernia 11/19/2013 13:04'!createCProjectFor: aSoftConfig	"Crea los archivos .C y .H Crea los archivos Proyecto en C que tiene el	 Programa Completo de usuario (Configuración de Software implementada en C)."		| resource |		resource := aSoftConfig resources first.	"Grabo el archivo main.c"	self fileSystem 		writeInMain: resource cMainC.					"Grabo el archivo PLC_UserPrograms.c"	self fileSystem 		writeInCLibrary: resource cUserProgramsC 		in: 'PLC_UserPrograms.c'.		"Grabo el archivo PLC_UserPrograms.h"	self fileSystem 		writeInHLibrary: resource cUserProgramsH 		in: 'PLC_UserPrograms.h'.					"Grabo el archivo PLC_StdFunctions.c"	self fileSystem 		writeInCLibrary: resource cStandardFunctionsC		in: 'PLC_StdFunctions.c'.		"Grabo el archivo PLC_StdFunctions.h"	self fileSystem 		writeInHLibrary: resource cStandardFunctionsH 		in: 'PLC_StdFunctions.h'.					"Grabo el archivo PLC_StdFunctionBlocks.c"	self fileSystem 		writeInCLibrary: resource cStandardFunctionBlocksC 		in: 'PLC_StdFunctionBlocks.c'.		"Grabo el archivo PLC_StdFunctionBlocks.h"	"self fileSystem 		writeInHLibrary: resource cStandardFunctionBlocksH 		in: 'PLC_StdFunctionBlocks.h'."						"Grabo el archivo PLC_UserTasks.c"	self fileSystem writeInCLibrary: 		resource cUserTasksC 		in: 'PLC_UserTasks.c'.		"Grabo el archivo PLC_UserTasks.h"	self fileSystem 		writeInHLibrary: resource 		cUserTasksH in: 'PLC_UserTasks.h'.! !!PLC_CompilerAndWriter methodsFor: 'compile' stamp: 'EricPernia 11/19/2013 13:58'!ilCompile: aSoftConfig	"Crea los archivos .il."		| resource |			"HACER"				resource := aSoftConfig resources first.	"Grabo el archivo main.c"	self fileSystem 		writeInMain: resource cMainC.					"Grabo el archivo PLC_UserPrograms.c"	self fileSystem 		writeInCLibrary: resource cUserProgramsC 		in: 'PLC_UserPrograms.c'.		"Grabo el archivo PLC_UserPrograms.h"	self fileSystem 		writeInHLibrary: resource cUserProgramsH 		in: 'PLC_UserPrograms.h'.					"Grabo el archivo PLC_StdFunctions.c"	self fileSystem 		writeInCLibrary: resource cStandardFunctionsC		in: 'PLC_StdFunctions.c'.		"Grabo el archivo PLC_StdFunctions.h"	self fileSystem 		writeInHLibrary: resource cStandardFunctionsH 		in: 'PLC_StdFunctions.h'.					"Grabo el archivo PLC_StdFunctionBlocks.c"	self fileSystem 		writeInCLibrary: resource cStandardFunctionBlocksC 		in: 'PLC_StdFunctionBlocks.c'.		"LO CANCELE PORQUE JODIA CON EL SET QUE ME MEZCLA LAS DECLARACIONESaSoftConfig DE TYPEDEF DE LOS FB ENTONCES LOS CONTADORES Y TEMPORIZADORES NO ENCUENTRAN R_TRIG O F_TRIG"	"Grabo el archivo PLC_StdFunctionBlocks.h"	"self fileSystem 		writeInHLibrary: resource cStandardFunctionBlocksH 		in: 'PLC_StdFunctionBlocks.h'."						"Grabo el archivo PLC_UserTasks.il"	self fileSystem writeInCLibrary: 		resource cUserTasksC 		in: 'PLC_UserTasks.il'.										"aSoftConfig ilCompile."! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_CompilerAndWriter class	instanceVariableNames: ''!!PLC_CompilerAndWriter class methodsFor: 'instance creation' stamp: 'EricPernia 11/1/2013 16:15'!clearInstance 	"Elimina la unica instancia de esta clase."	Instance ifNotNil: 		[		Instance := nil.		].! !!PLC_CompilerAndWriter class methodsFor: 'instance creation' stamp: 'EricPernia 11/1/2013 16:14'!uniqueInstance 	"Devuelve la unica instancia de esta clase."	Instance ifNil: 		[		Instance := PLC_CompilerAndWriter new.		].		^ Instance.! !Object subclass: #PLC_FileSystem	instanceVariableNames: 'workspacePath mainPath cLibraryPath hLibraryPath batFilesPath guiImagesPath ilExportPath'	classVariableNames: 'Instance'	poolDictionaries: ''	category: 'IDE4PLC-Compilation-Program'!!PLC_FileSystem commentStamp: '<historical>' prior: 0!Copyright © 2012-2014 Eric Nicolás Pernia.This class is part of IDE4PLC.IDE4PLC is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.IDE4PLC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.You should have received a copy of the GNU Lesser General Public License along with IDE4PLC. If not, see <http://www.gnu.org/licenses/>.A PLC_FileSystem is xxxxxxxxx.Instance Variables	batFilesPath:		<Object>	cLibraryPath:		<Object>	guiImagesPath:		<Object>	hLibraryPath:		<Object>	ilExportPath:		<Object>	mainPath:		<Object>	workspacePath:		<Object>batFilesPath	- xxxxxcLibraryPath	- xxxxxguiImagesPath	- xxxxxhLibraryPath	- xxxxxilExportPath	- xxxxxmainPath	- xxxxxworkspacePath	- xxxxx!!PLC_FileSystem methodsFor: 'initialize-release' stamp: 'EricPernia 5/17/2014 02:10'!initialize 	"Inicializaciones"	workspacePath := 'IDE4PLC_LPC1769_WS/'.	mainPath := 'PLeric_Project/'.	cLibraryPath := 'PLeriC_Library/src/'.	hLibraryPath := 'PLeriC_Library/inc/'.	batFilesPath := 'IDE4PLC_BAT/'.	ilExportPath := 'IDE4PLC_IL_Export/'.	guiImagesPath := 'IDE4PLC_files/GUI_Images/'.! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!batFilesPath		^ batFilesPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!batFilesPath: anObject		batFilesPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!cLibraryPath		^ cLibraryPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!cLibraryPath: anObject		cLibraryPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!guiImagesPath		^ guiImagesPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!guiImagesPath: anObject		guiImagesPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!hLibraryPath		^ hLibraryPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!hLibraryPath: anObject		hLibraryPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/8/2013 14:10'!ilExportPath		^ ilExportPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/8/2013 14:10'!ilExportPath: anObject		ilExportPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!mainPath		^ mainPath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!mainPath: anObject		mainPath := anObject! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!workspacePath		^ workspacePath! !!PLC_FileSystem methodsFor: 'accessing' stamp: 'EricPernia 11/1/2013 16:44'!workspacePath: anObject		workspacePath := anObject! !!PLC_FileSystem methodsFor: 'file' stamp: 'EricPernia 11/1/2013 17:01'!write: aString in: filePathString in: fileNameString 	"Graba el string aString en el archivo de texto cuya ruta es filePathString y nombre de archivo fileNameString"	| stream |		"forceNewFileNamed: Crea un nuevo archivo con el nombre dado, 	y devuelve un stream abierto para escritura en ese archivo. 	Si el archivo ya existe lo borra sin preguntar."	stream := StandardFileStream forceNewFileNamed:  filePathString , fileNameString.		stream nextPutAll: aString.	stream cr.	stream close.! !!PLC_FileSystem methodsFor: 'file' stamp: 'EricPernia 11/8/2013 13:58'!writeInCLibrary: aString in: fileNameString 	"Graba el string aString en el archivo de texto cuyo nombre de archivo fileNameString"	self write: aString 		in: self workspacePath , self cLibraryPath  		in: fileNameString.! !!PLC_FileSystem methodsFor: 'file' stamp: 'EricPernia 11/8/2013 13:59'!writeInHLibrary: aString in: fileNameString 	"Graba el string aString en el archivo de texto cuyo nombre de archivo fileNameString"	self write: aString 		in: self workspacePath , self hLibraryPath  		in: fileNameString.! !!PLC_FileSystem methodsFor: 'file' stamp: 'EricPernia 11/8/2013 14:12'!writeInILExport: aString in: fileNameString 	"Graba el string aString en el archivo de texto cuyo nombre de archivo fileNameString"	self write: aString 		in: self ilExportPath		in: fileNameString.! !!PLC_FileSystem methodsFor: 'file' stamp: 'EricPernia 11/8/2013 14:00'!writeInMain: aString	"Graba el string aString en el archivo de texto cuyo nombre de archivo es manin.c"	self write: aString 		in: self workspacePath , self mainPath		in: 'main.c'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PLC_FileSystem class	instanceVariableNames: ''!!PLC_FileSystem class methodsFor: 'instance creation' stamp: 'EricPernia 11/1/2013 16:15'!clearInstance 	"Elimina la unica instancia de esta clase."	Instance ifNotNil: 		[		Instance := nil.		].! !!PLC_FileSystem class methodsFor: 'instance creation' stamp: 'EricPernia 11/1/2013 16:13'!uniqueInstance 	"Devuelve la unica instancia de esta clase."	Instance ifNil: 		[		Instance := PLC_FileSystem new.		].		^ Instance.! !PLC_ClassWithIdentifier initialize!